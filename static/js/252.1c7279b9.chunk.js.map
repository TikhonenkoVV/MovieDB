{"version":3,"file":"static/js/252.1c7279b9.chunk.js","mappings":"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","sources":["common/constants.js","common/services/api.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/Loader.jsx","ui/Layout/pages/PersonDetails/PersonInfo/PersonInfo.styled.js","ui/Layout/pages/PersonDetails/PersonInfo/Credits/Credits.styled.js","ui/Layout/pages/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.styled.js","ui/Layout/pages/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.jsx","ui/Layout/pages/PersonDetails/PersonInfo/Credits/Credits.jsx","common/services/normalize/normalizeActing.js","common/services/normalize/normalizePersonInCrew.js","ui/Layout/pages/PersonDetails/PersonInfo/PersonInfo.jsx","ui/Layout/pages/PersonDetails/PersonDetails.jsx","common/services/normalize/normalizePersonData.js"],"sourcesContent":["export const IMAGES_BASE_URL_W300 = 'https://image.tmdb.org/t/p/w300';\nexport const IMAGES_BASE_URL_W600 = 'https://image.tmdb.org/t/p/w600';\nexport const IMAGES_BASE_URL_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n// const lang = '&language=uk-UA';\nconst lang = '&language=en-US';\n// const lang = '&language=ru-RU';\n\nexport const getMovies = async (mediaType, trands) => {\n    const { data } = await axios.get(\n        `trending/${mediaType}/${trands}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getMediaByName = async (mediaTypes, q, page) => {\n    const { data } = await axios.get(\n        `search/${mediaTypes}?api_key=${API_KEY + lang}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getDetails = async (mediaType, movieId, details) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}${details}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getTrailer = async (mediaType, movieId) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}/videos?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getPersonsByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/person?include_adult=false&api_key=${\n            API_KEY + lang\n        }&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getPersonById = async personId => {\n    const { data } = await axios.get(\n        `person/${personId}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n","export const formatDate = date => {\n    const options = {\n        // weekday: 'long',\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { BackDrop } from '../layouts/BackDrop/BackDrop';\n\nexport const Loader = () => {\n    return (\n        <BackDrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </BackDrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const PersonWrapper = styled.div`\n    color: ${({ theme }) => theme.colors.themeText};\n    @media ${({ theme }) => theme.breakpoints.l} {\n        display: flex;\n        align-items: flex-start;\n        gap: 24px;\n    }\n`;\n\nexport const Aside = styled.aside`\n    flex-shrink: 0;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    background-color: ${({ theme }) => theme.colors.mediumBackground};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        display: flex;\n        justify-content: start;\n        gap: ${({ theme }) => theme.spacing.retreatS};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        padding: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        width: 290px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 352px;\n        padding: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n\nexport const Picture = styled.picture`\n    display: block;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        flex-shrink: 0;\n        margin-bottom: 0;\n    }\n`;\n\nexport const PersonPhoto = styled.img`\n    width: 200px;\n    aspect-ratio: 2 / 3;\n    margin-left: auto;\n    margin-right: auto;\n    @media ${({ theme }) => theme.breakpoints.s} {\n        width: 250px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 300px;\n    }\n`;\n\nexport const AsideTitle = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n`;\n\nexport const PersonalInfoList = styled.ul``;\n\nexport const PersonalInfoItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n\nexport const MinorTitle = styled.h3`\n    margin-bottom: 8px;\n`;\n\nexport const InfoWrapper = styled.div`\n    @media ${({ theme }) => theme.breakpoints.s} {\n        flex-grow: 1;\n    }\n`;\n\nexport const ProfileWrapper = styled.div`\n    margin-bottom: 40px;\n`;\nexport const PersonTitle = styled.h1`\n    font-size: 36px;\n    margin-bottom: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n`;\n\nexport const CreditsList = styled.ul`\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    border: 1px solid gray;\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const ImageWrapper = styled.div`\n    flex-shrink: 0;\n    width: 70px;\n    height: 105px;\n    overflow: hidden;\n`;\n\nexport const Title = styled.h3`\n    margin-bottom: 12px;\n`;\n","import { ImageWrapper, Item, StyledLink, Title } from './CreditsItem.styled';\nimport noPoster from '../../../../../../../images/no-poster.jpg';\n\nexport const CreditsItem = ({ credits }) => {\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n    const IMAGES_BASE_URL_RETINA = 'https://image.tmdb.org/t/p/w400';\n\n    return credits?.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            movieTitle,\n            personCharacter,\n            releaseDate,\n            media_type,\n            vote_average,\n        }) => (\n            <Item key={credit_id}>\n                <StyledLink\n                    to={\n                        media_type === 'movie'\n                            ? `/movies/movie-${id}`\n                            : `/tv-shows/tv-${id}`\n                    }\n                    state={{ mediaTypes: media_type }}\n                >\n                    <ImageWrapper>\n                        <picture>\n                            <source\n                                srcSet={\n                                    poster_path\n                                        ? `${\n                                              IMAGES_BASE_URL + poster_path\n                                          } 1x, ${\n                                              IMAGES_BASE_URL_RETINA +\n                                              poster_path\n                                          } 2x`\n                                        : noPoster\n                                }\n                            />\n\n                            <img\n                                style={{\n                                    width: '100%',\n                                    height: '100%',\n                                    objectFit: 'cover',\n                                }}\n                                width={50}\n                                height={75}\n                                src={\n                                    poster_path\n                                        ? IMAGES_BASE_URL + poster_path\n                                        : noPoster\n                                }\n                                alt={movieTitle}\n                            />\n                        </picture>\n                    </ImageWrapper>\n                    <div>\n                        <Title>{movieTitle}</Title>\n                        {personCharacter && <p>Character: {personCharacter}</p>}\n                        <p>Year: {releaseDate}</p>\n                        <p>User score: {vote_average}</p>\n                    </div>\n                </StyledLink>\n            </Item>\n        )\n    );\n};\n","import { CreditsList, Title } from './Credits.styled';\nimport { normalizeActing } from 'common/services/normalize/normalizeActing';\nimport { normalizePersonInCrew } from 'common/services/normalize/normalizePersonInCrew';\nimport { CreditsItem } from './CreditsItem/CreditsItem';\n\nexport const Credits = ({ acting, crew }) => {\n    const personActing = normalizeActing(acting);\n    const personInCrew = normalizePersonInCrew(crew);\n\n    return (\n        <>\n            {personActing?.length > 0 && (\n                <>\n                    <Title>Acting</Title>\n                    <CreditsList>\n                        <CreditsItem credits={personActing} />\n                    </CreditsList>\n                </>\n            )}\n            {personInCrew?.length > 0 && (\n                <>\n                    <Title>Crew</Title>\n                    {personInCrew?.map((el, i) => (\n                        <CreditsList key={i}>\n                            <li>\n                                <Title>{Object.keys(el)[0]}</Title>\n                                <ul>\n                                    <CreditsItem\n                                        credits={el[Object.keys(el)]}\n                                    />\n                                </ul>\n                            </li>\n                        </CreditsList>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\n","export const normalizeActing = data => {\n    const nA = 'N/a';\n    let futureDate = new Date();\n    futureDate = new Date(futureDate.getTime() + 1000 * 60 * 60 * 24 * 730);\n    const res = data.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            title,\n            original_title,\n            name,\n            original_name,\n            character,\n            release_date,\n            vote_average,\n            first_air_date,\n            media_type,\n        }) => {\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n            const personCharacter = character ? character : nA;\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                personCharacter,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n    const result = res.sort((a, b) => b.sortDate - a.sortDate);\n\n    return result;\n};\n","export const normalizePersonInCrew = crew => {\n    const nA = 'N/a';\n    const res = crew?.map(\n        ({\n            id,\n            credit_id,\n            title,\n            original_title,\n            name,\n            original_name,\n            poster_path,\n            job,\n            release_date,\n            first_air_date,\n            vote_average,\n            media_type,\n        }) => {\n            let futureDate = new Date();\n            futureDate = new Date(\n                futureDate.getTime() + 1000 * 60 * 60 * 24 * 730\n            );\n\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                job,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n\n    const sortedResByDate = res?.sort((a, b) => b.sortDate - a.sortDate);\n\n    const list = [];\n    sortedResByDate?.map(el => {\n        if (!list.includes(el.job)) {\n            return list.push(el.job);\n        } else return null;\n    });\n\n    const result = list.map(res => {\n        let result = [];\n        sortedResByDate.map(el => {\n            if (el.job === res) {\n                return result.push(el);\n            } else return null;\n        });\n        return { [res]: result };\n    });\n\n    return result;\n};\n","import {\n    Aside,\n    AsideTitle,\n    InfoWrapper,\n    MinorTitle,\n    PersonPhoto,\n    PersonTitle,\n    PersonWrapper,\n    PersonalInfoItem,\n    PersonalInfoList,\n    Picture,\n    ProfileWrapper,\n} from './PersonInfo.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { IMAGES_BASE_URL_W300, IMAGES_BASE_URL_W600 } from 'common/constants';\nimport { Credits } from './Credits/Credits';\n\nexport const PersonInfo = ({ person, acting, crew, total }) => {\n    const {\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        age,\n        place_of_birth,\n        profile_path,\n    } = person;\n\n    return (\n        <PersonWrapper>\n            <Aside>\n                <Picture>\n                    <source\n                        srcSet={\n                            profile_path\n                                ? `${IMAGES_BASE_URL_W300 + profile_path} 1x, \n                                   ${IMAGES_BASE_URL_W600 + profile_path} 2x`\n                                : noPoster\n                        }\n                    />\n\n                    <PersonPhoto\n                        src={\n                            profile_path\n                                ? IMAGES_BASE_URL_W300 + profile_path\n                                : noPoster\n                        }\n                        alt={name}\n                        width={300}\n                        height={450}\n                    />\n                </Picture>\n                <div>\n                    <AsideTitle>Personal Info</AsideTitle>\n                    <PersonalInfoList>\n                        <PersonalInfoItem>\n                            <MinorTitle>Known for</MinorTitle>\n                            <p>{known_for_department}</p>\n                        </PersonalInfoItem>\n                        <PersonalInfoItem>\n                            <MinorTitle>Known credits</MinorTitle>\n                            <p>{total ?? 'N/a'}</p>\n                        </PersonalInfoItem>\n                        {gender !== 0 && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Gender</MinorTitle>\n                                <p>{gender === 2 ? 'Male' : 'Female'}</p>\n                            </PersonalInfoItem>\n                        )}\n                        {birthday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Birthday</MinorTitle>\n                                <p>\n                                    {birthday}{' '}\n                                    {!deathday && `(${age} years old)`}\n                                </p>\n                            </PersonalInfoItem>\n                        )}\n                        {deathday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Deahday</MinorTitle>\n                                <p>\n                                    {deathday} ({age} years old)\n                                </p>\n                            </PersonalInfoItem>\n                        )}\n                        {place_of_birth && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Place of birth</MinorTitle>\n                                <p>{place_of_birth}</p>\n                            </PersonalInfoItem>\n                        )}\n                    </PersonalInfoList>\n                </div>\n            </Aside>\n            <InfoWrapper>\n                <ProfileWrapper>\n                    <PersonTitle>{name}</PersonTitle>\n                    <MinorTitle>Biography</MinorTitle>\n                    {biography?.map((el, i) => (\n                        <p key={i} style={{ marginBottom: '12px' }}>\n                            {el}\n                        </p>\n                    ))}\n                    {biography?.length === 0 && (\n                        <p>We don't have a biography for {name}.</p>\n                    )}\n                </ProfileWrapper>\n                <Credits acting={acting} crew={crew} />\n            </InfoWrapper>\n        </PersonWrapper>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { normalizePersonData } from 'common/services/normalize/normalizePersonData';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { PersonInfo } from './PersonInfo/PersonInfo';\nimport { getDetails, getPersonById } from 'common/services/api';\n\nconst PersonDetails = () => {\n    const { personId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [personInfo, setPersonInfo] = useState({});\n    const [personCredits, setPersonCredits] = useState([]);\n    const [crew, setCrew] = useState([]);\n    const [totalCredits, setTotalCredits] = useState(0);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getPersonById(personId)\n            .then(data => {\n                setPersonInfo(normalizePersonData(data));\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                getDetails('person', personId, '/combined_credits')\n                    .then(data => {\n                        setPersonCredits(data.cast);\n                        setCrew(data.crew);\n                        const length = data?.cast?.length + data?.crew?.length;\n                        setTotalCredits(length);\n                    })\n                    .catch(err => {\n                        setError(err.message);\n                        toast(err.message);\n                    });\n                setIsLoading(false);\n            });\n    }, [personId]);\n\n    return (\n        <section>\n            {isLoading && <Loader />}\n            <Container>\n                {error && <ToastContainer />}\n                {!isLoading && (\n                    <PersonInfo\n                        person={personInfo}\n                        acting={personCredits}\n                        crew={crew}\n                        total={totalCredits}\n                    />\n                )}\n            </Container>\n        </section>\n    );\n};\n\nexport default PersonDetails;\n","import { calcAge } from '../dateOperations';\n\nexport const normalizePersonData = data => {\n    const {\n        id,\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        place_of_birth,\n        profile_path,\n    } = data;\n    let biographyArr = [];\n    if (biography && biography !== '') {\n        biographyArr = biography.split('\\n\\n');\n    }\n\n    let calculateAge = calcAge(birthday, new Date());\n    if (deathday) {\n        calculateAge = calcAge(birthday, deathday);\n    }\n\n    return {\n        id,\n        biography: biographyArr,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        age: calculateAge,\n        place_of_birth,\n        profile_path,\n    };\n};\n"],"names":["IMAGES_BASE_URL_W300","IMAGES_BASE_URL_W600","IMAGES_BASE_URL_W1280","axios","API_KEY","lang","getMovies","mediaType","trands","data","getMediaByName","mediaTypes","q","page","getDetails","movieId","details","getTrailer","getPersonById","personId","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","PersonWrapper","styled","theme","colors","themeText","breakpoints","l","Aside","spacing","retreatS","mediumBackground","fromXsTillL","s","retreatM","xl","retreatL","Picture","PersonPhoto","AsideTitle","PersonalInfoList","PersonalInfoItem","MinorTitle","InfoWrapper","ProfileWrapper","PersonTitle","Title","CreditsList","Item","StyledLink","Link","ImageWrapper","CreditsItem","credits","IMAGES_BASE_URL","map","id","credit_id","poster_path","movieTitle","personCharacter","releaseDate","media_type","vote_average","to","state","srcSet","noPoster","style","objectFit","src","alt","Credits","acting","crew","personActing","nA","futureDate","getTime","title","original_title","name","original_name","character","release_date","first_air_date","getFullYear","sortDate","round","sort","a","b","normalizeActing","personInCrew","res","job","sortedResByDate","list","el","includes","push","result","normalizePersonInCrew","length","i","Object","keys","PersonInfo","person","total","biography","known_for_department","gender","birthday","deathday","age","place_of_birth","profile_path","marginBottom","useParams","useState","isLoading","setIsLoading","error","setError","personInfo","setPersonInfo","personCredits","setPersonCredits","setCrew","totalCredits","setTotalCredits","useEffect","then","biographyArr","split","calculateAge","normalizePersonData","catch","err","message","toast","finally","cast","Container"],"sourceRoot":""}