{"version":3,"file":"static/js/592.539e884e.chunk.js","mappings":"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","sources":["common/constants.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/MediaList/MediaList.styled.js","ui/Layout/globalComponents/components/MediaList/MediaList.jsx","common/services/normalize/normalizeMoviesData.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.styled.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js","ui/Layout/pages/Home/Hero/Hero.styled.js","ui/Layout/pages/Home/Hero/Hero.jsx","ui/Layout/globalComponents/components/Select/Select.styled.js","ui/Layout/globalComponents/components/Select/Select.jsx","ui/Layout/pages/Home/TrendsTogler/TrendsTogler.styled.js","ui/Layout/pages/Home/TrendsTogler/TrendsTogler.jsx","ui/Layout/pages/Home/Home.jsx","common/services/getBackgraunds.js"],"sourcesContent":["export const PROFILE_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const PROFILE_H632 = 'https://image.tmdb.org/t/p/h632';\nexport const POSTER_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const POSTER_W342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_W500 = 'https://image.tmdb.org/t/p/w500';\nexport const BACKDROP_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","export const formatDate = date => {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMedialist = styled.ul`\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatS};\n        grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n        display: grid;\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n`;\n\nexport const StyledMediaCard = styled.li`\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n        @media ${({ theme }) => theme.breakpoints.xs} {\n            margin-bottom: 0;\n        }\n    }\n\n    &:hover {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: flex;\n    gap: 24px;\n    position: relative;\n    flex-grow: 1;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: block;\n    }\n`;\n\nexport const ImgWrapper = styled.div`\n    flex-shrink: 0;\n    width: 120px;\n    & img {\n        width: 100%;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: 100%;\n        overflow: hidden;\n        aspect-ratio: 2/3;\n        color: ${({ theme }) => theme.colors.white};\n        & img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        }\n    }\n`;\n\nexport const ScoreBarBox = styled.div`\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 1;\n\n        white-space: normal;\n        width: auto;\n        height: auto;\n        overflow: auto;\n        clip: auto;\n        clip-path: none;\n        margin: 0;\n    }\n`;\n\nexport const CardInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    width: 100%;\n    /* text-align: left; */\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        text-align: center;\n        padding-top: 10px;\n        padding-right: 10px;\n        padding-bottom: 10px;\n        padding-left: 10px;\n    }\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 6px;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 1.5;\n`;\n\nexport const Release = styled.p`\n    margin-bottom: 24px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Score = styled.p`\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: none;\n    }\n`;\n","import {\n    CardInfo,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n    Release,\n    Score,\n    ScoreBarBox,\n    StyledMediaCard,\n    StyledMedialist,\n} from './MediaList.styled';\nimport noPoster from '../../../../images/no-poster.jpg';\nimport { POSTER_W342 } from 'common/constants';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { normalizeMoviesData } from 'common/services/normalize/normalizeMoviesData';\n\nexport const MediaList = ({ media, mediaTypes }) => {\n    const data = normalizeMoviesData(media, mediaTypes);\n\n    return (\n        <StyledMedialist>\n            {data.map(\n                ({\n                    id,\n                    vote_average,\n                    movie_title,\n                    media_type,\n                    poster_path,\n                    release,\n                }) => (\n                    <StyledMediaCard key={id}>\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/movie-${id}`\n                                    : media_type === 'tv'\n                                    ? `/tv-shows/tv-${id}`\n                                    : `/movies/collections/collection-${id}`\n                            }\n                        >\n                            <ScoreBarBox>\n                                <ScoreBar size={0.7} rating={vote_average} />\n                            </ScoreBarBox>\n                            <ImgWrapper>\n                                <img\n                                    width={80}\n                                    src={\n                                        poster_path\n                                            ? `${POSTER_W342 + poster_path}`\n                                            : noPoster\n                                    }\n                                    alt={movie_title}\n                                />\n                            </ImgWrapper>\n                            <CardInfo>\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <Release>{release}</Release>\n                                <Score>\n                                    User score:{' '}\n                                    {vote_average === 'NR'\n                                        ? vote_average\n                                        : `${vote_average} %`}\n                                </Score>\n                            </CardInfo>\n                        </MovieLink>\n                    </StyledMediaCard>\n                )\n            )}\n        </StyledMedialist>\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMoviesData = (data, mediaTypes) => {\n    return data.map(\n        ({\n            id,\n            vote_average,\n            name,\n            title,\n            media_type,\n            original_title,\n            original_name,\n            poster_path,\n            release_date,\n            first_air_date,\n        }) => {\n            let release;\n            if (release_date) {\n                release = formatDate(release_date);\n            } else if (first_air_date) {\n                release = formatDate(first_air_date);\n            } else release = 'N/a';\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            return {\n                id,\n                movie_title,\n                media_type: media_type ? media_type : mediaTypes,\n\n                release,\n                vote_average:\n                    vote_average > 0 ? Math.round(vote_average * 10) : 'NR',\n                poster_path,\n            };\n        }\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\nimport { BACKDROP_W1280 } from 'common/constants';\n\nexport const HeroSection = styled.section`\n    padding-bottom: 0;\n`;\n\nexport const HeroBackground = styled.div`\n    @media screen and (max-width: 349px) {\n        aspect-ratio: 4/3;\n    }\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    width: 100%;\n    padding: 30px;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.hover};\n\n    aspect-ratio: 7 / 4;\n    @media ${({ theme }) => theme.breakpoints.m} {\n        aspect-ratio: 8 / 3;\n        padding: 50px;\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        aspect-ratio: 7 / 2;\n    }\n    &:before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        border-bottom-left-radius: 20px;\n        border-bottom-right-radius: 20px;\n        opacity: 0.7;\n        background-image: ${({ background }) =>\n            \"url('\" + BACKDROP_W1280 + background + \"')\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        filter: grayscale(1);\n        mix-blend-mode: soft-light;\n        @media ${({ theme }) => theme.breakpoints.xs} {\n            background-position: auto 12%;\n        }\n    }\n`;\n\nexport const Title = styled.h1`\n    font-weight: 700;\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.xxxl};\n    }\n`;\n\nexport const Description = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    font-weight: 700;\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.large};\n    }\n`;\n","import { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { Description, HeroBackground, HeroSection, Title } from './Hero.styled';\n\nexport const Hero = ({ backgrounds }) => {\n    const image =\n        backgrounds && backgrounds[Math.floor(Math.random() * (20 - 1) + 1)];\n    return (\n        <HeroSection>\n            <Container>\n                <HeroBackground background={image}>\n                    <Title>Welcome.</Title>\n                    <Description>\n                        Looking for a movie, TV show or person? We'll help.\n                    </Description>\n                </HeroBackground>\n            </Container>\n        </HeroSection>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    cursor: pointer;\n    z-index: 3;\n`;\n\nexport const BtnSelectStyled = styled.button`\n    padding-left: 5px;\n    padding-right: 20px;\n    border: none;\n    background-color: transparent;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: 500;\n    line-height: 1.5;\n    cursor: pointer;\n\n    &:before {\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 50%;\n        border: 1px solid ${({ theme }) => theme.colors.themeText};\n        border-width: 0 2px 2px 0;\n        padding: 3px;\n        transform: translateY(${({ isOpen }) => (!isOpen ? '-80%' : '-30%')})\n            rotate(${({ isOpen }) => (!isOpen ? '45deg' : '-135deg')});\n        transition: transform 250ms;\n        cursor: pointer;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n`;\n\nexport const DivListStyled = styled.div`\n    position: absolute;\n    top: 100%;\n    right: 0;\n    border-radius: 8px;\n    padding: 10px;\n    margin: 0;\n    margin-top: 10px;\n    background-color: ${({ theme }) => theme.colors.mainBackground};\n    transform: ${props => (props.isOpen ? 'scaleY(1)' : 'scaleY(0)')};\n    transform-origin: top;\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    box-shadow: ${props => props.theme.colors.boxShadowSelector};\n    border: 1px solid ${props => props.theme.colors.borderSelectorColor};\n`;\n\nexport const LiStyled = styled.li`\n    width: 80px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    border-radius: 4px;\n    color: ${props => props.theme.colors.textSelectorColor};\n    text-align: center;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.hover};\n        color: ${({ theme }) => theme.colors.white};\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n    DivStyled,\n    BtnSelectStyled,\n    DivListStyled,\n    LiStyled,\n} from './Select.styled';\n\nexport const Select = ({ initial, onChange }) => {\n    const [currVal, setCurrVal] = useState('All');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const [options, setOptions] = useState([\n        { all: 'All' },\n        { movie: 'Movie' },\n        { tv: 'Tv' },\n    ]);\n\n    const handleChange = event => {\n        event.stopPropagation();\n        setCurrVal(event.target.innerText);\n        onChange(event.target.getAttribute('data-id'));\n        setIsOpen(false);\n    };\n\n    const handleClick = event => {\n        event.stopPropagation();\n        setIsOpen(!isOpen);\n    };\n\n    useEffect(() => {\n        window.addEventListener('click', () => setIsOpen(false));\n        return () => {\n            window.removeEventListener('click', () => setIsOpen(false));\n        };\n    }, []);\n\n    useEffect(() => {\n        if (initial?.options) setOptions(initial.options);\n    }, [initial]);\n\n    return (\n        <DivStyled>\n            <BtnSelectStyled isOpen={isOpen} onClick={handleClick}>\n                {currVal ? currVal : 'Theme'}\n            </BtnSelectStyled>\n\n            <DivListStyled isOpen={isOpen} onClick={e => e.stopPropagation()}>\n                <ul>\n                    {options?.map(el => (\n                        <LiStyled\n                            data-id={Object.keys(el)}\n                            key={Object.keys(el)}\n                            onClick={handleChange}\n                        >\n                            {Object.values(el)}\n                        </LiStyled>\n                    ))}\n                </ul>\n            </DivListStyled>\n        </DivStyled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledTogler = styled.div`\n    display: grid;\n    grid-template-columns: auto auto;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-template-columns: auto auto auto;\n    }\n`;\n\nexport const TogglerTitle = styled.h1`\n    grid-column: span 2;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.themeText};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-column: auto;\n        font-size: ${({ theme }) => theme.fontSizes.large};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        font-size: ${({ theme }) => theme.fontSizes.xl};\n    }\n`;\n\nexport const TrendsBtnWrapper = styled.div`\n    position: relative;\n    display: flex;\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 17px;\n    overflow: hidden;\n`;\n\nexport const TrendsBtn = styled.button`\n    flex-basis: 50%;\n    width: 100px;\n    height: 100%;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: ${({ theme }) => theme.colors.light};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n    &:hover,\n    &:focus {\n        color: ${({ theme }) => theme.colors.themeText};\n    }\n    &.active {\n        color: ${({ theme }) => theme.colors.white};\n        background-color: ${({ theme }) => theme.colors.accent};\n    }\n`;\n","import { Select } from 'ui/Layout/globalComponents/components/Select/Select';\nimport {\n    StyledTogler,\n    TogglerTitle,\n    TrendsBtn,\n    TrendsBtnWrapper,\n} from './TrendsTogler.styled';\n\nexport const TrendsToggler = ({\n    trands,\n    onBtnDayClick,\n    onBtnWeekClick,\n    hendleSelectChange,\n}) => {\n    return (\n        <StyledTogler>\n            <TogglerTitle>Top 20 Trending</TogglerTitle>\n            <TrendsBtnWrapper>\n                <TrendsBtn\n                    datatype=\"day\"\n                    className={trands === 'day' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnDayClick}\n                >\n                    today\n                </TrendsBtn>\n                <TrendsBtn\n                    className={trands === 'week' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnWeekClick}\n                >\n                    this week\n                </TrendsBtn>\n            </TrendsBtnWrapper>\n            <Select onChange={hendleSelectChange} />\n        </StyledTogler>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovies } from 'common/services/api';\nimport { getBackgrounds } from 'common/services/getBackgraunds';\nimport { Hero } from './Hero/Hero';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { TrendsToggler } from './TrendsTogler/TrendsTogler';\nimport { MediaList } from '../../globalComponents/components/MediaList/MediaList';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [trands, setTrends] = useState('day');\n    const [mediaTypes, setMediaTypes] = useState('all');\n    const [movies, setMovies] = useState([]);\n    const [backgrounds, setBackgrounds] = useState();\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getMovies(mediaTypes, trands)\n            .then(data => {\n                setMovies(data.results);\n                setBackgrounds(getBackgrounds(data.results));\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [mediaTypes, trands]);\n\n    const onBtnWeekClick = () => {\n        setTrends('week');\n    };\n\n    const onBtnDayClick = () => {\n        setTrends('day');\n    };\n\n    const hendleSelectChange = mediaType => {\n        setMediaTypes(mediaType);\n    };\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <Hero backgrounds={backgrounds} />\n            <section className=\"padding-top\">\n                <Container>\n                    <TrendsToggler\n                        trands={trands}\n                        onBtnDayClick={onBtnDayClick}\n                        onBtnWeekClick={onBtnWeekClick}\n                        hendleSelectChange={hendleSelectChange}\n                    />\n                </Container>\n            </section>\n            <section>\n                <Container>\n                    <MediaList media={movies} />\n                </Container>\n            </section>\n            {error && <ToastContainer />}\n        </>\n    );\n};\n\nexport default Home;\n","export const getBackgrounds = (data, mediaTypes) => {\n    const array = {};\n    const res = data.map(({ backdrop_path }, i) => {\n        return (array[i] = backdrop_path);\n    });\n    return res;\n};\n"],"names":["PROFILE_W185","PROFILE_H632","POSTER_W185","POSTER_W342","BACKDROP_W1280","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","StyledMedialist","styled","theme","breakpoints","xs","spacing","retreatS","retreatM","s","m","xl","retreatL","xxl","StyledMediaCard","colors","accent","shadow","MovieLink","Link","ImgWrapper","white","ScoreBarBox","CardInfo","MovieTitle","fontSizes","small","Release","Score","MediaList","data","mediaTypes","map","release","id","vote_average","name","title","media_type","original_title","original_name","poster_path","release_date","first_air_date","movie_title","round","normalizeMoviesData","media","to","ScoreBar","size","rating","width","src","noPoster","alt","ScoreProgressBar","ScoreCircle","color","length","BgrCircle","ScoreSpan","style","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","height","viewBox","cx","cy","r","ref","HeroSection","HeroBackground","hover","l","background","Title","xxxl","Description","medium","large","Hero","backgrounds","image","floor","random","Container","DivStyled","themeText","baseTransition","BtnSelectStyled","isOpen","DivListStyled","mainBackground","props","boxShadowSelector","borderSelectorColor","LiStyled","textSelectorColor","Select","initial","onChange","currVal","setCurrVal","setIsOpen","all","movie","tv","options","setOptions","handleChange","event","stopPropagation","target","innerText","getAttribute","window","addEventListener","removeEventListener","onClick","e","el","Object","keys","values","StyledTogler","TogglerTitle","TrendsBtnWrapper","TrendsBtn","light","TrendsToggler","trands","onBtnDayClick","onBtnWeekClick","hendleSelectChange","datatype","className","type","isLoading","setIsLoading","setTrends","setMediaTypes","movies","setMovies","setBackgrounds","error","setError","getMovies","then","results","array","i","backdrop_path","getBackgrounds","catch","err","message","toast","finally","Loader","mediaType"],"sourceRoot":""}