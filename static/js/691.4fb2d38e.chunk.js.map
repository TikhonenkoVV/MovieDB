{"version":3,"file":"static/js/691.4fb2d38e.chunk.js","mappings":"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","sources":["common/constants.js","common/services/dateOperations.js","ui/Layout/pages/Media/PersonDetails/PersonInfo/PersonInfo.styled.js","ui/Layout/pages/Media/PersonDetails/PersonInfo/Credits/Credits.styled.js","ui/Layout/pages/Media/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.styled.js","ui/Layout/pages/Media/PersonDetails/PersonInfo/Credits/CreditsItem/CreditsItem.jsx","ui/Layout/pages/Media/PersonDetails/PersonInfo/Credits/Credits.jsx","common/services/normalize/normalizeActing.js","common/services/normalize/normalizePersonInCrew.js","ui/Layout/pages/Media/PersonDetails/PersonInfo/PersonInfo.jsx","ui/Layout/pages/Media/PersonDetails/PersonDetails.jsx","common/services/normalize/normalizePersonData.js"],"sourcesContent":["export const PROFILE_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const PROFILE_H632 = 'https://image.tmdb.org/t/p/h632';\nexport const POSTER_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const POSTER_W342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_W500 = 'https://image.tmdb.org/t/p/w500';\nexport const BACKDROP_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","export const formatDate = date => {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const PersonWrapper = styled.div`\n    color: ${({ theme }) => theme.colors.themeText};\n    @media ${({ theme }) => theme.breakpoints.l} {\n        display: flex;\n        align-items: flex-start;\n        gap: 24px;\n    }\n`;\n\nexport const Aside = styled.aside`\n    flex-shrink: 0;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    background-color: ${({ theme }) => theme.colors.mediumBackground};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        display: flex;\n        justify-content: start;\n        gap: ${({ theme }) => theme.spacing.retreatS};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        padding: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        width: 290px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 352px;\n        padding: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n\nexport const PersonPhoto = styled.img`\n    width: 200px;\n    aspect-ratio: 2 / 3;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.fromXsTillL} {\n        flex-shrink: 0;\n        margin-bottom: 0;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        margin-left: 0;\n        margin-right: 0;\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        width: 250px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: 300px;\n    }\n`;\n\nexport const AsideTitle = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n`;\n\nexport const PersonalInfoList = styled.ul``;\n\nexport const PersonalInfoItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n\nexport const MinorTitle = styled.h3`\n    margin-bottom: 8px;\n`;\n\nexport const InfoWrapper = styled.div`\n    @media ${({ theme }) => theme.breakpoints.s} {\n        flex-grow: 1;\n    }\n`;\n\nexport const ProfileWrapper = styled.div`\n    margin-bottom: 40px;\n`;\nexport const PersonTitle = styled.h1`\n    font-size: 36px;\n    margin-bottom: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n`;\n\nexport const CreditsList = styled.ul`\n    padding: ${({ theme }) => theme.spacing.retreatS};\n    border: 1px solid gray;\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const ImageWrapper = styled.div`\n    flex-shrink: 0;\n    width: 70px;\n    height: 105px;\n    overflow: hidden;\n`;\n\nexport const Title = styled.h3`\n    margin-bottom: 12px;\n`;\n","import { ImageWrapper, Item, StyledLink, Title } from './CreditsItem.styled';\nimport noPoster from '../../../../../../../images/no-poster.jpg';\nimport { POSTER_W185 } from 'common/constants';\n\nexport const CreditsItem = ({ credits }) => {\n    return credits?.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            movieTitle,\n            personCharacter,\n            releaseDate,\n            media_type,\n            vote_average,\n        }) => (\n            <Item key={credit_id}>\n                <StyledLink\n                    to={\n                        media_type === 'movie'\n                            ? `/movies/movie-${id}`\n                            : `/tv-shows/tv-${id}`\n                    }\n                    state={{ mediaTypes: media_type }}\n                >\n                    <ImageWrapper>\n                        <img\n                            style={{\n                                aspectRatio: '2/3',\n                                objectFit: 'cover',\n                            }}\n                            width={70}\n                            height={105}\n                            src={\n                                poster_path\n                                    ? POSTER_W185 + poster_path\n                                    : noPoster\n                            }\n                            alt={movieTitle}\n                        />\n                    </ImageWrapper>\n                    <div>\n                        <Title>{movieTitle}</Title>\n                        {personCharacter && <p>Character: {personCharacter}</p>}\n                        <p>Year: {releaseDate}</p>\n                        <p>User score: {vote_average}</p>\n                    </div>\n                </StyledLink>\n            </Item>\n        )\n    );\n};\n","import { CreditsList, Title } from './Credits.styled';\nimport { normalizeActing } from 'common/services/normalize/normalizeActing';\nimport { normalizePersonInCrew } from 'common/services/normalize/normalizePersonInCrew';\nimport { CreditsItem } from './CreditsItem/CreditsItem';\n\nexport const Credits = ({ acting, crew }) => {\n    const personActing = normalizeActing(acting);\n    const personInCrew = normalizePersonInCrew(crew);\n\n    return (\n        <>\n            {personActing?.length > 0 && (\n                <>\n                    <Title>Acting</Title>\n                    <CreditsList>\n                        <CreditsItem credits={personActing} />\n                    </CreditsList>\n                </>\n            )}\n            {personInCrew?.length > 0 && (\n                <>\n                    <Title>Crew</Title>\n                    {personInCrew?.map((el, i) => (\n                        <CreditsList key={i}>\n                            <li>\n                                <Title>{Object.keys(el)[0]}</Title>\n                                <ul>\n                                    <CreditsItem\n                                        credits={el[Object.keys(el)]}\n                                    />\n                                </ul>\n                            </li>\n                        </CreditsList>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\n","export const normalizeActing = data => {\n    const nA = 'N/a';\n    let futureDate = new Date();\n    futureDate = new Date(futureDate.getTime() + 1000 * 60 * 60 * 24 * 730);\n    const res = data.map(\n        ({\n            id,\n            credit_id,\n            poster_path,\n            title,\n            original_title,\n            name,\n            original_name,\n            character,\n            release_date,\n            vote_average,\n            first_air_date,\n            media_type,\n        }) => {\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n            const personCharacter = character ? character : nA;\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                personCharacter,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n    const result = res.sort((a, b) => b.sortDate - a.sortDate);\n\n    return result;\n};\n","export const normalizePersonInCrew = crew => {\n    const nA = 'N/a';\n    const res = crew?.map(\n        ({\n            id,\n            credit_id,\n            title,\n            original_title,\n            name,\n            original_name,\n            poster_path,\n            job,\n            release_date,\n            first_air_date,\n            vote_average,\n            media_type,\n        }) => {\n            let futureDate = new Date();\n            futureDate = new Date(\n                futureDate.getTime() + 1000 * 60 * 60 * 24 * 730\n            );\n\n            const movieTitle = title\n                ? title\n                : name\n                ? name\n                : original_title\n                ? original_title\n                : original_name;\n\n            let releaseDate = release_date\n                ? release_date\n                : first_air_date\n                ? first_air_date\n                : nA;\n\n            const sortDate = () => {\n                if (releaseDate !== nA) {\n                    return new Date(releaseDate).getTime();\n                } else return new Date(futureDate).getTime();\n            };\n            if (releaseDate !== nA) {\n                releaseDate = new Date(releaseDate).getFullYear();\n            } else {\n                releaseDate = nA;\n            }\n\n            return {\n                id,\n                credit_id,\n                poster_path,\n                movieTitle,\n                job,\n                releaseDate,\n                sortDate: sortDate(),\n                media_type,\n                vote_average:\n                    vote_average > 0\n                        ? `${Math.round(vote_average * 10)}%`\n                        : 'NR',\n            };\n        }\n    );\n\n    const sortedResByDate = res?.sort((a, b) => b.sortDate - a.sortDate);\n\n    const list = [];\n    sortedResByDate?.map(el => {\n        if (!list.includes(el.job)) {\n            return list.push(el.job);\n        } else return null;\n    });\n\n    const result = list.map(res => {\n        let result = [];\n        sortedResByDate.map(el => {\n            if (el.job === res) {\n                return result.push(el);\n            } else return null;\n        });\n        return { [res]: result };\n    });\n\n    return result;\n};\n","import {\n    Aside,\n    AsideTitle,\n    InfoWrapper,\n    MinorTitle,\n    PersonPhoto,\n    PersonTitle,\n    PersonWrapper,\n    PersonalInfoItem,\n    PersonalInfoList,\n    ProfileWrapper,\n} from './PersonInfo.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { PROFILE_H632 } from 'common/constants';\nimport { Credits } from './Credits/Credits';\n\nexport const PersonInfo = ({ person, acting, crew, total }) => {\n    const {\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        age,\n        place_of_birth,\n        profile_path,\n    } = person;\n\n    return (\n        <PersonWrapper>\n            <Aside>\n                <PersonPhoto\n                    src={profile_path ? PROFILE_H632 + profile_path : noPoster}\n                    alt={name}\n                    width={300}\n                    height={450}\n                />\n                <div>\n                    <AsideTitle>Personal Info</AsideTitle>\n                    <PersonalInfoList>\n                        <PersonalInfoItem>\n                            <MinorTitle>Known for</MinorTitle>\n                            <p>{known_for_department}</p>\n                        </PersonalInfoItem>\n                        <PersonalInfoItem>\n                            <MinorTitle>Known credits</MinorTitle>\n                            <p>{total ?? 'N/a'}</p>\n                        </PersonalInfoItem>\n                        {gender !== 0 && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Gender</MinorTitle>\n                                <p>{gender === 2 ? 'Male' : 'Female'}</p>\n                            </PersonalInfoItem>\n                        )}\n                        {birthday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Birthday</MinorTitle>\n                                <p>\n                                    {birthday}{' '}\n                                    {!deathday && `(${age} years old)`}\n                                </p>\n                            </PersonalInfoItem>\n                        )}\n                        {deathday && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Deahday</MinorTitle>\n                                <p>\n                                    {deathday} ({age} years old)\n                                </p>\n                            </PersonalInfoItem>\n                        )}\n                        {place_of_birth && (\n                            <PersonalInfoItem>\n                                <MinorTitle>Place of birth</MinorTitle>\n                                <p>{place_of_birth}</p>\n                            </PersonalInfoItem>\n                        )}\n                    </PersonalInfoList>\n                </div>\n            </Aside>\n            <InfoWrapper>\n                <ProfileWrapper>\n                    <PersonTitle>{name}</PersonTitle>\n                    <MinorTitle>Biography</MinorTitle>\n                    {biography?.map((el, i) => (\n                        <p key={i} style={{ marginBottom: '12px' }}>\n                            {el}\n                        </p>\n                    ))}\n                    {biography?.length === 0 && (\n                        <p>We don't have a biography for {name}.</p>\n                    )}\n                </ProfileWrapper>\n                <Credits acting={acting} crew={crew} />\n            </InfoWrapper>\n        </PersonWrapper>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { normalizePersonData } from 'common/services/normalize/normalizePersonData';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { PersonInfo } from './PersonInfo/PersonInfo';\nimport { getDetails, getPersonById } from 'common/services/api';\n\nconst PersonDetails = () => {\n    const { personId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [personInfo, setPersonInfo] = useState({});\n    const [personCredits, setPersonCredits] = useState([]);\n    const [crew, setCrew] = useState([]);\n    const [totalCredits, setTotalCredits] = useState(0);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getPersonById(personId)\n            .then(data => {\n                setPersonInfo(normalizePersonData(data));\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                getDetails('person', personId, '/combined_credits')\n                    .then(data => {\n                        setPersonCredits(data.cast);\n                        setCrew(data.crew);\n                        const length = data?.cast?.length + data?.crew?.length;\n                        setTotalCredits(length);\n                    })\n                    .catch(err => {\n                        setError(err.message);\n                        toast(err.message);\n                    });\n                setIsLoading(false);\n            });\n    }, [personId]);\n\n    return (\n        <section className=\"padding-top\">\n            {isLoading && <Loader />}\n            <Container>\n                {error && <ToastContainer />}\n                {!isLoading && (\n                    <PersonInfo\n                        person={personInfo}\n                        acting={personCredits}\n                        crew={crew}\n                        total={totalCredits}\n                    />\n                )}\n            </Container>\n        </section>\n    );\n};\n\nexport default PersonDetails;\n","import { calcAge } from '../dateOperations';\n\nexport const normalizePersonData = data => {\n    const {\n        id,\n        biography,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        place_of_birth,\n        profile_path,\n    } = data;\n    let biographyArr = [];\n    if (biography && biography !== '') {\n        biographyArr = biography.split('\\n\\n');\n    }\n\n    let calculateAge = calcAge(birthday, new Date());\n    if (deathday) {\n        calculateAge = calcAge(birthday, deathday);\n    }\n\n    return {\n        id,\n        biography: biographyArr,\n        known_for_department,\n        name,\n        gender,\n        birthday,\n        deathday,\n        age: calculateAge,\n        place_of_birth,\n        profile_path,\n    };\n};\n"],"names":["PROFILE_W185","PROFILE_H632","POSTER_W185","POSTER_W342","BACKDROP_W1280","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","PersonWrapper","styled","theme","colors","themeText","breakpoints","l","Aside","spacing","retreatS","mediumBackground","fromXsTillL","s","retreatM","xl","retreatL","PersonPhoto","xs","AsideTitle","PersonalInfoList","PersonalInfoItem","MinorTitle","InfoWrapper","ProfileWrapper","PersonTitle","Title","CreditsList","Item","StyledLink","Link","ImageWrapper","CreditsItem","credits","map","id","credit_id","poster_path","movieTitle","personCharacter","releaseDate","media_type","vote_average","to","state","mediaTypes","style","aspectRatio","objectFit","width","height","src","noPoster","alt","Credits","acting","crew","personActing","data","nA","futureDate","getTime","title","original_title","name","original_name","character","release_date","first_air_date","getFullYear","sortDate","round","sort","a","b","normalizeActing","personInCrew","res","job","sortedResByDate","list","el","includes","push","result","normalizePersonInCrew","length","i","Object","keys","PersonInfo","person","total","biography","known_for_department","gender","birthday","deathday","age","place_of_birth","profile_path","marginBottom","personId","useParams","useState","isLoading","setIsLoading","error","setError","personInfo","setPersonInfo","personCredits","setPersonCredits","setCrew","totalCredits","setTotalCredits","useEffect","getPersonById","then","biographyArr","split","calculateAge","normalizePersonData","catch","err","message","toast","finally","getDetails","cast","className","Loader","Container"],"sourceRoot":""}