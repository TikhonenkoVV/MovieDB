{"version":3,"file":"static/js/704.115ff37c.chunk.js","mappings":"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","sources":["common/constants.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.styled.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js","ui/Layout/pages/Media/Collections/CollectionInfo/CollectionInfo.styled.js","ui/Layout/pages/Media/Collections/CollectionInfo/CollectionInfo.jsx","ui/Layout/pages/Media/Collections/CollectionList/CollectionList.styled.js","ui/Layout/pages/Media/Collections/CollectionList/CollectionList.jsx","data/genres.js","common/services/getGenresDescription.js","ui/Layout/pages/Media/Collections/CollectionDetails/CollectionDetails.jsx","common/services/normalize/normalizeCollection.js","common/services/normalize/normalizeParts.js"],"sourcesContent":["export const PROFILE_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const PROFILE_H632 = 'https://image.tmdb.org/t/p/h632';\nexport const POSTER_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const POSTER_W342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_W500 = 'https://image.tmdb.org/t/p/w500';\nexport const BACKDROP_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","export const formatDate = date => {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { BACKDROP_W1280 } from 'common/constants';\n\nexport const CollectionWrapper = styled.div`\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: grid;\n        grid-template-columns: 140px auto;\n        align-items: start;\n        gap: 20px;\n        padding: ${({ theme }) => theme.spacing.retreatM} 0;\n        background-image: ${({ theme }) => theme.lg.movieInfo},\n            url(${({ bgr }) => (bgr ? BACKDROP_W1280 + bgr : noPoster)});\n        background-position: top;\n        background-repeat: no-repeat;\n        background-size: ${({ itemHeight, theme }) =>\n            `auto calc(${itemHeight}px + ${theme.spacing.retreatM} + ${theme.spacing.retreatM})`};\n        transition: background ${({ theme }) => theme.baseTransition};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-template-columns: 230px auto;\n        grid-template-rows: auto calc(\n                100% - ${({ itemHeight }) => itemHeight}px - 20px\n            );\n        background-size: ${({ itemHeight, theme }) =>\n            itemHeight < 385\n                ? 'auto 385px'\n                : `auto calc(${itemHeight}px + ${theme.spacing.retreatM} + ${theme.spacing.retreatM})`};\n        transition: background ${({ theme }) => theme.baseTransition};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        background-position: center;\n        background-size: cover;\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        grid-template-columns: 300px auto;\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        padding: ${({ theme }) => theme.spacing.retreatL} 0;\n    }\n`;\n\nexport const PosterWrapper = styled.div`\n    @media ${({ theme }) => theme.breakpoints.onlyXs} {\n        background-image: ${({ theme }) => theme.lg.movieInfoOnlyS},\n            url(${({ bgr }) => (bgr ? BACKDROP_W1280 + bgr : noPoster)});\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        padding: 20px 0;\n    }\n    transition: background ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        flex-shrink: 0;\n        margin: 0;\n        padding: 0;\n        background: none;\n        height: auto;\n    }\n    @media ${({ theme }) => theme.breakpoints.onlyM} {\n        margin-bottom: 20px;\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-row: span 2;\n    }\n`;\n\nexport const Poster = styled.img`\n    object-fit: cover;\n    aspect-ratio: 2 / 3;\n    height: 210px;\n    @media ${({ theme }) => theme.breakpoints.s} {\n        width: 230px;\n        height: auto;\n        margin-right: auto;\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        width: 300px;\n    }\n`;\n\nexport const CollectionInfoWrapper = styled.div`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.onlyXs} {\n        &:not(.end) {\n            margin-bottom: 16px;\n        }\n    }\n    &.end {\n        @media ${({ theme }) => theme.breakpoints.xs} {\n            grid-column: span 2;\n        }\n        @media ${({ theme }) => theme.breakpoints.m} {\n            grid-column: span 1;\n        }\n    }\n`;\n\nexport const TitleMinor = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n    margin-bottom: 16px;\n`;\n\nexport const ScoreBox = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 20px;\n`;\n\nexport const TitleMajor = styled.h2`\n    margin-bottom: 8px;\n`;\n\nexport const Description = styled.p`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n","import {\n    CollectionInfoWrapper,\n    CollectionWrapper,\n    Description,\n    Poster,\n    PosterWrapper,\n    ScoreBox,\n    TitleMajor,\n    TitleMinor,\n} from './CollectionInfo.styled';\nimport { useEffect, useRef, useState } from 'react';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { POSTER_W342 } from 'common/constants';\n\nexport const CollectionInfo = ({ collection }) => {\n    const {\n        name,\n        overview,\n        poster_path,\n        backdrop_path,\n        vote_average,\n        genre_ids,\n    } = collection;\n\n    const observer = useRef(null);\n    const gridItem = useRef(null);\n    const [itemHeight, setItemHeight] = useState(0);\n\n    useEffect(() => {\n        if (gridItem.current) {\n            const item = gridItem.current;\n            observer.current = new ResizeObserver(() => {\n                if (gridItem.current) {\n                    const { clientHeight } = item;\n                    setItemHeight(clientHeight);\n                }\n            });\n            observer.current.observe(item);\n        }\n    }, []);\n\n    return (\n        <section>\n            <Container>\n                <CollectionWrapper itemHeight={itemHeight} bgr={backdrop_path}>\n                    <PosterWrapper bgr={backdrop_path}>\n                        <picture>\n                            <source\n                                srcSet={\n                                    poster_path\n                                        ? `${POSTER_W342 + poster_path} 1x`\n                                        : noPoster\n                                }\n                            />\n\n                            <Poster\n                                src={\n                                    poster_path\n                                        ? POSTER_W342 + poster_path\n                                        : noPoster\n                                }\n                                alt={name}\n                            />\n                        </picture>\n                    </PosterWrapper>\n                    <CollectionInfoWrapper ref={gridItem}>\n                        <TitleMinor>{name}</TitleMinor>\n                        <ScoreBox>\n                            <ScoreBar size={1} rating={vote_average} />\n                            <h3>User Score</h3>\n                        </ScoreBox>\n                    </CollectionInfoWrapper>\n                    <CollectionInfoWrapper className=\"end\">\n                        <TitleMajor>Owerview</TitleMajor>\n                        <Description>{overview}</Description>\n                        <TitleMajor>Genres</TitleMajor>\n                        <Description>\n                            {genre_ids?.map(el => el).join(', ')}\n                        </Description>\n                    </CollectionInfoWrapper>\n                </CollectionWrapper>\n            </Container>\n        </section>\n    );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n\nexport const StyledLi = styled.li`\n    flex-basis: calc(50% - 12px);\n    border-radius: 16px;\n    border: 1px solid #808080;\n    overflow: hidden;\n    box-shadow: 0px 0px 15px 2px #00000050;\n`;\n\nexport const StyledLink = styled(Link)`\n    text-align: center;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: flex;\n        gap: 20px;\n        text-align: left;\n    }\n`;\n\nexport const MoviePoster = styled.img`\n    flex-shrink: 0;\n    width: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 16px;\n    object-fit: cover;\n    aspect-ratio: 2 / 3;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: auto;\n        margin-bottom: 0;\n        margin-left: 0;\n        margin-right: 0;\n    }\n`;\n\nexport const MovieInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.m} {\n        gap: 20px;\n    }\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n`;\n\nexport const ScoreBox = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 20px;\n`;\n","import {\n    MovieInfoTitle,\n    MovieInfoWrapper,\n    MoviePoster,\n    ScoreBox,\n    StyledLi,\n    StyledLink,\n    StyledList,\n} from './CollectionList.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { POSTER_W185 } from 'common/constants';\n\nexport const CollectionList = ({ parts }) => {\n    return (\n        <StyledList>\n            {parts?.map(\n                ({ id, title, poster_path, release_date, vote_average }) => {\n                    return (\n                        <StyledLi key={id}>\n                            <StyledLink to={`/movies/movie-${id}`}>\n                                <MoviePoster\n                                    src={\n                                        poster_path\n                                            ? POSTER_W185 + poster_path\n                                            : noPoster\n                                    }\n                                    alt={title}\n                                />\n                                <MovieInfoWrapper>\n                                    <MovieInfoTitle>{title}</MovieInfoTitle>\n                                    {release_date && (\n                                        <p>Release date: {release_date}</p>\n                                    )}\n                                    <ScoreBox>\n                                        <ScoreBar\n                                            size={0.8}\n                                            rating={vote_average}\n                                        />\n                                        <h3>User Score</h3>\n                                    </ScoreBox>\n                                </MovieInfoWrapper>\n                            </StyledLink>\n                        </StyledLi>\n                    );\n                }\n            )}\n        </StyledList>\n    );\n};\n","export const genres = {\n    id_28: { 'en-US': 'Action', 'uk-UA': 'Бойовик' },\n    id_12: { 'en-US': 'Adventure', 'uk-UA': 'Пригоди' },\n    id_16: { 'en-US': 'Animation', 'uk-UA': 'Мультфільм' },\n    id_35: { 'en-US': 'Comedy', 'uk-UA': 'Комедія' },\n    id_80: { 'en-US': 'Crime', 'uk-UA': 'Кримінал' },\n    id_99: { 'en-US': 'Documentary', 'uk-UA': 'Документальний' },\n    id_18: { 'en-US': 'Drama', 'uk-UA': 'Драма' },\n    id_10751: { 'en-US': 'Family', 'uk-UA': 'Сімейний' },\n    id_14: { 'en-US': 'Fantasy', 'uk-UA': 'Фентезі' },\n    id_36: { 'en-US': 'History', 'uk-UA': 'Історичний' },\n    id_27: { 'en-US': 'Horror', 'uk-UA': 'Жахи' },\n    id_10402: { 'en-US': 'Music', 'uk-UA': 'Музика' },\n    id_9648: { 'en-US': 'Mystery', 'uk-UA': 'Детектив' },\n    id_10749: { 'en-US': 'Romance', 'uk-UA': 'Мелодрама' },\n    id_878: { 'en-US': 'Science Fiction', 'uk-UA': 'Фантастика' },\n    id_10770: { 'en-US': 'TV Movie', 'uk-UA': 'Телефільм' },\n    id_53: { 'en-US': 'Thriller', 'uk-UA': 'Трилер' },\n    id_10752: { 'en-US': 'War', 'uk-UA': 'Військовий' },\n    id_37: { 'en-US': 'Western', 'uk-UA': 'Вестерн' },\n};\n","import { genres } from 'data/genres';\n\nexport const getGenresDescription = iDs => {\n    let res = [];\n    iDs.map(el => {\n        return res.push(genres[`id_${el}`]['en-US']);\n    });\n    return res;\n};\n","import { useEffect, useState } from 'react';\nimport { CollectionInfo } from '../CollectionInfo/CollectionInfo';\nimport { CollectionList } from '../CollectionList/CollectionList';\nimport { useParams } from 'react-router-dom';\nimport { getDetails } from 'common/services/api';\nimport { normalizeCollection } from 'common/services/normalize/normalizeCollection';\nimport { normalizeParts } from 'common/services/normalize/normalizeParts';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\n\nexport const CollectionDetails = () => {\n    const { collectionId } = useParams();\n\n    const [first, setFirst] = useState(true);\n    const [collection, setCollection] = useState(null);\n    const [parts, setParts] = useState();\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        if (!first) return;\n        setFirst(false);\n        const id = collectionId.split('-')[1];\n        getDetails('collection', id, '')\n            .then(data => {\n                setCollection(normalizeCollection(data));\n                setParts(normalizeParts(data.parts));\n            })\n            .catch(err => {\n                setError(err.message);\n            })\n            .finally(() => {});\n    }, [first, collectionId]);\n\n    return (\n        <>\n            {collection && <CollectionInfo collection={collection} />}\n            <section>\n                <Container>\n                    <CollectionList parts={parts} />\n                </Container>\n            </section>\n            {error && console.log(error)}\n        </>\n    );\n};\n","import { getGenresDescription } from '../getGenresDescription';\n\nexport const normalizeCollection = collection => {\n    let rating = [];\n    let genres = [];\n    let genre_ids = [];\n    collection.parts.map(({ vote_average, genre_ids }) => {\n        if (vote_average) rating.push(vote_average);\n        genres.push(...genre_ids);\n        return '';\n    });\n    genres.map(el => {\n        const isInclude = genre_ids.includes(el);\n        if (!isInclude) genre_ids.push(el);\n        return '';\n    });\n    genres = [];\n    genre_ids = getGenresDescription(genre_ids);\n    let ratingValue = 0;\n    rating.map(el => {\n        return (ratingValue += el);\n    });\n    const vote_average = Math.round((ratingValue / rating.length) * 10);\n    const res = {\n        name: collection.name,\n        overview: collection.overview,\n        poster_path: collection.poster_path,\n        backdrop_path: collection.backdrop_path,\n        vote_average,\n        genre_ids,\n    };\n    return res;\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeParts = parts => {\n    const res = parts.map(\n        ({\n            id,\n            title,\n            original_title,\n            poster_path,\n            release_date,\n            vote_average,\n        }) => {\n            const newReleaseDate = formatDate(release_date);\n            return {\n                id,\n                title: title ? title : original_title,\n                poster_path,\n                release_date: newReleaseDate,\n                vote_average: Math.round(vote_average * 10) || 'NR',\n            };\n        }\n    );\n    return res;\n};\n"],"names":["PROFILE_W185","PROFILE_H632","POSTER_W185","POSTER_W342","BACKDROP_W1280","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","Score","styled","size","ScoreProgressBar","ScoreCircle","color","length","BgrCircle","ScoreSpan","ScoreBar","rating","style","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","width","height","viewBox","cx","cy","r","ref","CollectionWrapper","theme","breakpoints","xs","spacing","retreatM","lg","movieInfo","bgr","noPoster","itemHeight","baseTransition","s","m","l","xl","retreatL","PosterWrapper","onlyXs","movieInfoOnlyS","onlyM","Poster","CollectionInfoWrapper","colors","themeText","TitleMinor","fontSizes","xxl","ScoreBox","TitleMajor","Description","CollectionInfo","collection","name","overview","poster_path","backdrop_path","vote_average","genre_ids","observer","gridItem","setItemHeight","item","ResizeObserver","clientHeight","observe","Container","srcSet","src","alt","className","map","el","join","StyledList","retreatS","StyledLi","StyledLink","Link","MoviePoster","MovieInfoWrapper","MovieInfoTitle","CollectionList","parts","id","title","release_date","to","genres","id_28","id_12","id_16","id_35","id_80","id_99","id_18","id_10751","id_14","id_36","id_27","id_10402","id_9648","id_10749","id_878","id_10770","id_53","id_10752","id_37","getGenresDescription","iDs","res","push","CollectionDetails","collectionId","useParams","first","setFirst","setCollection","setParts","error","setError","split","getDetails","then","data","includes","ratingValue","round","normalizeCollection","original_title","normalizeParts","catch","err","message","finally","console","log"],"sourceRoot":""}