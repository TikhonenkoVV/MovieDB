{"version":3,"file":"static/js/592.9456206a.chunk.js","mappings":"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","sources":["common/constants.js","common/services/api.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/Loader.jsx","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.styled.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js","ui/Layout/pages/Home/Hero/Hero.styled.js","ui/Layout/pages/Home/Hero/Hero.jsx","ui/Layout/globalComponents/components/Select/Select.styled.js","ui/Layout/globalComponents/components/Select/Select.jsx","ui/Layout/pages/Home/TrendsTogler/TrendsTogler.styled.js","ui/Layout/pages/Home/TrendsTogler/TrendsTogler.jsx","ui/Layout/pages/Home/Home.jsx","common/services/getBackgraunds.js","ui/Layout/pages/Home/MediaList/MediaList.styled.js","ui/Layout/pages/Home/MediaList/MediaList.jsx","common/services/normalize/normalizeMoviesData.js"],"sourcesContent":["export const IMAGES_BASE_URL_W300 = 'https://image.tmdb.org/t/p/w300';\nexport const IMAGES_BASE_URL_W600 = 'https://image.tmdb.org/t/p/w600';\nexport const IMAGES_BASE_URL_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n// const lang = '&language=uk-UA';\nconst lang = '&language=en-US';\n// const lang = '&language=ru-RU';\n\nexport const getMovies = async (mediaType, trands) => {\n    const { data } = await axios.get(\n        `trending/${mediaType}/${trands}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getMediaByName = async (mediaTypes, q, page) => {\n    const { data } = await axios.get(\n        `search/${mediaTypes}?api_key=${API_KEY + lang}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getDetails = async (mediaType, movieId, details) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}${details}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getTrailer = async (mediaType, movieId) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}/videos?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getPersonsByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/person?include_adult=false&api_key=${\n            API_KEY + lang\n        }&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getPersonById = async personId => {\n    const { data } = await axios.get(\n        `person/${personId}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n","export const formatDate = date => {\n    const options = {\n        // weekday: 'long',\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { BackDrop } from '../layouts/BackDrop/BackDrop';\n\nexport const Loader = () => {\n    return (\n        <BackDrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </BackDrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\nimport { IMAGES_BASE_URL_W1280 } from 'common/constants';\n\nexport const HeroSection = styled.section`\n    padding-bottom: 0;\n`;\n\nexport const Filter = styled.div`\n    position: relative;\n    margin-left: auto;\n    margin-right: auto;\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.hover};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: ${({ theme }) => theme.sizes.xs};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        width: ${({ theme }) => theme.sizes.s};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        width: ${({ theme }) => theme.sizes.m};\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        width: ${({ theme }) => theme.sizes.l};\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        width: ${({ theme }) => theme.sizes.xl};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        width: ${({ theme }) => theme.sizes.xxl};\n    }\n`;\n\nexport const SloganBox = styled.div`\n    position: absolute;\n    left: 50px;\n    bottom: 50px;\n`;\n\nexport const Title = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xxxl};\n    font-weight: 700;\n    margin-bottom: 24px;\n`;\n\nexport const Description = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.large};\n    font-weight: 700;\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const HeroBackground = styled.div`\n    position: relative;\n\n    width: 100%;\n    aspect-ratio: 3 / 1;\n\n    opacity: 0.7;\n\n    background-image: ${({ background }) =>\n        \"url('\" + IMAGES_BASE_URL_W1280 + background + \"')\"};\n    background-position: 0 -50px;\n    background-repeat: no-repeat;\n    background-size: cover;\n    padding-left: ${({ theme }) => theme.spacing.retreatS};\n    padding-right: ${({ theme }) => theme.spacing.retreatS};\n\n    filter: grayscale(1);\n\n    mix-blend-mode: soft-light;\n\n    @media ${({ theme }) => theme.breakpoints.s} {\n        padding-left: ${({ theme }) => theme.spacing.retreatM};\n        padding-right: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        padding-left: ${({ theme }) => theme.spacing.retreatL};\n        padding-right: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n","import {\n    Description,\n    Filter,\n    HeroBackground,\n    HeroSection,\n    SloganBox,\n    Title,\n} from './Hero.styled';\n\nexport const Hero = ({ backgrounds }) => {\n    const image =\n        backgrounds && backgrounds[Math.floor(Math.random() * (20 - 1) + 1)];\n    return (\n        <HeroSection>\n            <Filter>\n                <SloganBox>\n                    <Title>Welcome.</Title>\n                    <Description>\n                        Looking for a movie, TV show or person? We'll help.\n                    </Description>\n                </SloganBox>\n                <HeroBackground background={image}></HeroBackground>\n            </Filter>\n        </HeroSection>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    cursor: pointer;\n    z-index: 3;\n`;\n\nexport const BtnSelectStyled = styled.button`\n    padding-left: 5px;\n    padding-right: 20px;\n    border: none;\n    background-color: transparent;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: 500;\n    line-height: 1.5;\n    cursor: pointer;\n\n    &:before {\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 50%;\n        border: 1px solid ${({ theme }) => theme.colors.themeText};\n        border-width: 0 2px 2px 0;\n        padding: 3px;\n        transform: translateY(${({ isOpen }) => (!isOpen ? '-80%' : '-30%')})\n            rotate(${({ isOpen }) => (!isOpen ? '45deg' : '-135deg')});\n        transition: transform 250ms;\n        cursor: pointer;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n`;\n\nexport const DivListStyled = styled.div`\n    position: absolute;\n    top: 100%;\n    right: 0;\n    border-radius: 8px;\n    padding: 10px;\n    margin: 0;\n    margin-top: 10px;\n    background-color: ${({ theme }) => theme.colors.mainBackground};\n    transform: ${props => (props.isOpen ? 'scaleY(1)' : 'scaleY(0)')};\n    transform-origin: top;\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    box-shadow: ${props => props.theme.colors.boxShadowSelector};\n    border: 1px solid ${props => props.theme.colors.borderSelectorColor};\n`;\n\nexport const LiStyled = styled.li`\n    width: 80px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    border-radius: 4px;\n    color: ${props => props.theme.colors.textSelectorColor};\n    text-align: center;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.hover};\n        color: ${({ theme }) => theme.colors.white};\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n    DivStyled,\n    BtnSelectStyled,\n    DivListStyled,\n    LiStyled,\n} from './Select.styled';\n\nexport const Select = ({ initial, onChange }) => {\n    const [currVal, setCurrVal] = useState('All');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const [options, setOptions] = useState([\n        { all: 'All' },\n        { movie: 'Movie' },\n        { tv: 'Tv' },\n    ]);\n\n    const handleChange = event => {\n        event.stopPropagation();\n        setCurrVal(event.target.innerText);\n        onChange(event.target.getAttribute('data-id'));\n        setIsOpen(false);\n    };\n\n    const handleClick = event => {\n        event.stopPropagation();\n        setIsOpen(!isOpen);\n    };\n\n    useEffect(() => {\n        window.addEventListener('click', () => setIsOpen(false));\n        return () => {\n            window.removeEventListener('click', () => setIsOpen(false));\n        };\n    }, []);\n\n    useEffect(() => {\n        if (initial?.options) setOptions(initial.options);\n    }, [initial]);\n\n    return (\n        <DivStyled>\n            <BtnSelectStyled isOpen={isOpen} onClick={handleClick}>\n                {currVal ? currVal : 'Theme'}\n            </BtnSelectStyled>\n\n            <DivListStyled isOpen={isOpen} onClick={e => e.stopPropagation()}>\n                <ul>\n                    {options?.map(el => (\n                        <LiStyled\n                            data-id={Object.keys(el)}\n                            key={Object.keys(el)}\n                            onClick={handleChange}\n                        >\n                            {Object.values(el)}\n                        </LiStyled>\n                    ))}\n                </ul>\n            </DivListStyled>\n        </DivStyled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledTogler = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: stretch;\n    gap: 10px;\n`;\n\nexport const TogglerTitle = styled.h1`\n    text-align: center;\n    color: ${({ theme }) => theme.colors.themeText};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.xl};\n    }\n`;\n\nexport const TrendsBtnWrapper = styled.div`\n    position: relative;\n    display: flex;\n    border: 1px solid ${({ theme }) => theme.colors.hover};\n    border-radius: 17px;\n    overflow: hidden;\n`;\n\nexport const TrendsBtn = styled.button`\n    flex-basis: 50%;\n    width: 100px;\n    height: 100%;\n    color: ${({ theme }) => theme.colors.light};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n    &:hover,\n    &:focus {\n        color: ${({ theme }) => theme.colors.themeText};\n    }\n    &.active {\n        color: ${({ theme }) => theme.colors.white};\n        background-color: ${({ theme }) => theme.colors.hover};\n    }\n`;\n","import { Select } from 'ui/Layout/globalComponents/components/Select/Select';\nimport {\n    StyledTogler,\n    TogglerTitle,\n    TrendsBtn,\n    TrendsBtnWrapper,\n} from './TrendsTogler.styled';\n\nexport const TrendsToggler = ({\n    trands,\n    onBtnDayClick,\n    onBtnWeekClick,\n    hendleSelectChange,\n}) => {\n    return (\n        <StyledTogler>\n            <TogglerTitle>Trending</TogglerTitle>\n            <TrendsBtnWrapper>\n                <TrendsBtn\n                    datatype=\"day\"\n                    className={trands === 'day' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnDayClick}\n                >\n                    today\n                </TrendsBtn>\n                <TrendsBtn\n                    className={trands === 'week' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnWeekClick}\n                >\n                    this week\n                </TrendsBtn>\n            </TrendsBtnWrapper>\n            <Select onChange={hendleSelectChange} />\n        </StyledTogler>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovies } from 'common/services/api';\nimport { getBackgrounds } from 'common/services/getBackgraunds';\nimport { Hero } from './Hero/Hero';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { TrendsToggler } from './TrendsTogler/TrendsTogler';\nimport { MediaList } from './MediaList/MediaList';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [trands, setTrends] = useState('day');\n    const [mediaTypes, setMediaTypes] = useState('all');\n    const [movies, setMovies] = useState([]);\n    const [backgrounds, setBackgrounds] = useState();\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getMovies(mediaTypes, trands)\n            .then(data => {\n                setMovies(data.results);\n                setBackgrounds(getBackgrounds(data.results));\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [mediaTypes, trands]);\n\n    const onBtnWeekClick = () => {\n        setTrends('week');\n    };\n\n    const onBtnDayClick = () => {\n        setTrends('day');\n    };\n\n    const hendleSelectChange = mediaType => {\n        setMediaTypes(mediaType);\n    };\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <Hero backgrounds={backgrounds} />\n            <section className=\"padding-top\">\n                <Container>\n                    <TrendsToggler\n                        trands={trands}\n                        onBtnDayClick={onBtnDayClick}\n                        onBtnWeekClick={onBtnWeekClick}\n                        hendleSelectChange={hendleSelectChange}\n                    />\n                </Container>\n            </section>\n            <section>\n                <Container>\n                    <MediaList media={movies} />\n                </Container>\n            </section>\n            {error && <ToastContainer />}\n        </>\n    );\n};\n\nexport default Home;\n","export const getBackgrounds = (data, mediaTypes) => {\n    const array = {};\n    const res = data.map(({ backdrop_path }, i) => {\n        return (array[i] = backdrop_path);\n    });\n    return res;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMedialist = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n`;\n\nexport const StyledMediaCard = styled.li`\n    display: flex;\n    flex-direction: column;\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n\n    &:hover,\n    &:focus {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img,\n    &:focus img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 100%;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    color: ${({ theme }) => theme.colors.white};\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const CardInfo = styled.div`\n    flex-grow: 1;\n    width: 100%;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    text-align: center;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 6px;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 1.5;\n`;\n","import {\n    CardInfo,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n    StyledMediaCard,\n    StyledMedialist,\n} from './MediaList.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { IMAGES_BASE_URL_W300, IMAGES_BASE_URL_W600 } from 'common/constants';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { normalizeMoviesData } from 'common/services/normalize/normalizeMoviesData';\n\nexport const MediaList = ({ media, mediaTypes }) => {\n    const data = normalizeMoviesData(media, mediaTypes);\n\n    return (\n        <StyledMedialist>\n            {data.map(\n                ({\n                    id,\n                    vote_average,\n                    movie_title,\n                    media_type,\n                    poster_path,\n                    release,\n                }) => (\n                    <StyledMediaCard key={id}>\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/movie-${id}`\n                                    : `/tv-shows/tv-${id}`\n                            }\n                        >\n                            <ImgWrapper>\n                                <ScoreBar\n                                    size={0.7}\n                                    rating={vote_average}\n                                    style={{\n                                        position: 'absolute',\n                                        top: 10,\n                                        right: 10,\n                                        zIndex: 1,\n                                    }}\n                                />\n                                <picture>\n                                    <source\n                                        srcSet={\n                                            poster_path\n                                                ? `${\n                                                      IMAGES_BASE_URL_W300 +\n                                                      poster_path\n                                                  } 1x, ${\n                                                      IMAGES_BASE_URL_W600 +\n                                                      poster_path\n                                                  } 2x`\n                                                : noPoster\n                                        }\n                                    />\n                                    <img\n                                        src={\n                                            poster_path\n                                                ? `${\n                                                      IMAGES_BASE_URL_W300 +\n                                                      poster_path\n                                                  }`\n                                                : noPoster\n                                        }\n                                        alt={movie_title}\n                                    />\n                                </picture>\n                            </ImgWrapper>\n                            <CardInfo>\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <p>{release}</p>\n                            </CardInfo>\n                        </MovieLink>\n                    </StyledMediaCard>\n                )\n            )}\n        </StyledMedialist>\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMoviesData = (data, mediaTypes) => {\n    return data.map(\n        ({\n            id,\n            vote_average,\n            name,\n            title,\n            media_type,\n            original_title,\n            original_name,\n            poster_path,\n            release_date,\n            first_air_date,\n        }) => {\n            let release;\n            if (release_date) {\n                release = formatDate(release_date);\n            } else if (first_air_date) {\n                release = formatDate(first_air_date);\n            } else release = 'N/a';\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            return {\n                id,\n                movie_title,\n                media_type: media_type ? media_type : mediaTypes,\n\n                release,\n                vote_average:\n                    vote_average > 0 ? Math.round(vote_average * 10) : 'NR',\n                poster_path,\n            };\n        }\n    );\n};\n"],"names":["IMAGES_BASE_URL_W300","IMAGES_BASE_URL_W600","IMAGES_BASE_URL_W1280","axios","API_KEY","lang","getMovies","mediaType","trands","data","getMediaByName","mediaTypes","q","page","getDetails","movieId","details","getTrailer","getPersonById","personId","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Score","styled","size","ScoreProgressBar","ScoreCircle","length","BgrCircle","ScoreSpan","ScoreBar","rating","style","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","viewBox","cx","cy","r","ref","HeroSection","Filter","theme","colors","white","hover","breakpoints","xs","sizes","s","m","l","xl","xxl","SloganBox","Title","fontSizes","xxxl","Description","large","HeroBackground","background","spacing","retreatS","retreatM","retreatL","Hero","backgrounds","image","floor","random","DivStyled","themeText","baseTransition","BtnSelectStyled","small","isOpen","medium","DivListStyled","mainBackground","props","boxShadowSelector","borderSelectorColor","LiStyled","textSelectorColor","Select","initial","onChange","currVal","setCurrVal","setIsOpen","all","movie","tv","options","setOptions","handleChange","event","stopPropagation","target","innerText","getAttribute","window","addEventListener","removeEventListener","onClick","e","map","el","Object","keys","values","StyledTogler","TogglerTitle","TrendsBtnWrapper","TrendsBtn","light","TrendsToggler","onBtnDayClick","onBtnWeekClick","hendleSelectChange","datatype","className","type","isLoading","setIsLoading","setTrends","setMediaTypes","movies","setMovies","setBackgrounds","error","setError","then","results","array","i","backdrop_path","getBackgrounds","catch","err","message","toast","finally","Container","MediaList","media","StyledMedialist","StyledMediaCard","accent","shadow","MovieLink","Link","ImgWrapper","CardInfo","MovieTitle","release","id","vote_average","name","title","media_type","original_title","original_name","poster_path","release_date","first_air_date","movie_title","round","normalizeMoviesData","to","right","zIndex","srcSet","noPoster","src","alt"],"sourceRoot":""}