{"version":3,"file":"static/js/289.9cbe0dd5.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Rewiew/Review.styled.jsx","components/Rewiew/Review.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-color: #00000080;\n    transition: opacity 250ms, visibility 250ms;\n    z-index: 100;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Backdrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </Backdrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewTitle = styled.h2`\n    color: ${({ theme }) => theme.colors.white};\n    margin-bottom: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n    display: grid;\n    gap: 20px;\n`;\n\nexport const RevievItem = styled.li`\n    padding: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const ReviewAutor = styled.h2`\n    margin-bottom: 20px;\n`;\n\nexport const ReviewWrapper = styled.div`\n    position: relative;\n`;\n\nexport const ReviewGradient = styled.div`\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 20px;\n    background-image: linear-gradient(${props => props.theme.lg.whiteSpace});\n`;\n\nexport const RevieText = styled.p`\n    max-height: 81px;\n    overflow: hidden;\n`;\n\nexport const Expander = styled.button`\n    height: 40px;\n    color: ${props => props.theme.colors.light};\n    transition: color 250ms;\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.white};\n    }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport {\n    Expander,\n    ReviewAutor,\n    RevieText,\n    RevievItem,\n    ReviewGradient,\n    ReviewList,\n    ReviewTitle,\n    ReviewWrapper,\n} from './Review.styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { gethMovieDetails } from 'services/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const Review = () => {\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState([]);\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n        setIsLoading(true);\n        gethMovieDetails(movieId, '/reviews')\n            .then(data => {\n                setReviews(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {reviews.length > 0 && (\n                <>\n                    <ReviewTitle>Reviews</ReviewTitle>\n                    <ReviewList>\n                        {reviews?.map(({ id, author, content }) => (\n                            <RevievItem key={id}>\n                                <ReviewAutor>Author: {author}</ReviewAutor>\n                                <ReviewWrapper>\n                                    <RevieText>{content}</RevieText>\n                                    <ReviewGradient />\n                                </ReviewWrapper>\n                                <Expander type=\"button\">Full review</Expander>\n                            </RevievItem>\n                        ))}\n                    </ReviewList>\n                </>\n            )}\n            {reviews.length < 1 && (\n                <ReviewTitle>Sorry, this movie has no reviews.</ReviewTitle>\n            )}\n            {error && <ToastContainer />}\n        </>\n    );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n\nexport const gethMovies = async trands => {\n    const { data } = await axios.get(\n        `trending/movie/${trands}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const gethMoviesByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const gethMovieDetails = async (movieId, details) => {\n    const { data } = await axios.get(\n        `movie/${movieId}${details}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const gethMovieTrailer = async movieId => {\n    const { data } = await axios.get(\n        `movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    return data;\n};\n"],"names":["Backdrop","styled","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ReviewTitle","theme","colors","white","ReviewList","RevievItem","accent","ReviewAutor","ReviewWrapper","ReviewGradient","props","lg","whiteSpace","RevieText","Expander","light","Review","movieId","useParams","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","useEffect","gethMovieDetails","then","data","results","catch","err","message","toast","finally","length","map","id","author","content","type","axios","API_KEY","gethMovies","trands","gethMoviesByName","q","page","details","gethMovieTrailer"],"sourceRoot":""}