{"version":3,"file":"static/js/46.9282fe19.chunk.js","mappings":"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","sources":["common/constants.js","common/services/api.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/Loader.jsx","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.styled.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js","ui/Layout/pages/Home/MediaList/MediaList.styled.js","ui/Layout/pages/Home/MediaList/MediaList.jsx","common/services/normalize/normalizeMoviesData.js","ui/Layout/pages/globalLayouts/Search/Page404/Page404.styled.js","ui/Layout/pages/globalLayouts/Search/Page404/Page404.jsx","ui/Layout/pages/globalLayouts/Search/Pagination/Pagination.styled.js","ui/Layout/pages/globalLayouts/Search/Pagination/Pagination.jsx","ui/Layout/pages/PersonDetails/PersonsList/PersonsList.styled.js","ui/Layout/pages/PersonDetails/PersonsList/PersonsList.jsx","ui/Layout/pages/globalLayouts/Search/Search.jsx"],"sourcesContent":["export const IMAGES_BASE_URL_W300 = 'https://image.tmdb.org/t/p/w300';\nexport const IMAGES_BASE_URL_W600 = 'https://image.tmdb.org/t/p/w600';\nexport const IMAGES_BASE_URL_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n// const lang = '&language=uk-UA';\nconst lang = '&language=en-US';\n// const lang = '&language=ru-RU';\n\nexport const getMovies = async (mediaType, trands) => {\n    const { data } = await axios.get(\n        `trending/${mediaType}/${trands}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getMediaByName = async (mediaTypes, q, page) => {\n    const { data } = await axios.get(\n        `search/${mediaTypes}?api_key=${API_KEY + lang}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getDetails = async (mediaType, movieId, details) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}${details}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getTrailer = async (mediaType, movieId) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}/videos?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getPersonsByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/person?include_adult=false&api_key=${\n            API_KEY + lang\n        }&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getPersonById = async personId => {\n    const { data } = await axios.get(\n        `person/${personId}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n","export const formatDate = date => {\n    const options = {\n        // weekday: 'long',\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { BackDrop } from '../layouts/BackDrop/BackDrop';\n\nexport const Loader = () => {\n    return (\n        <BackDrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </BackDrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMedialist = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n`;\n\nexport const StyledMediaCard = styled.li`\n    display: flex;\n    flex-direction: column;\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n\n    &:hover,\n    &:focus {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img,\n    &:focus img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 100%;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    color: ${({ theme }) => theme.colors.white};\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const CardInfo = styled.div`\n    flex-grow: 1;\n    width: 100%;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    text-align: center;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 6px;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 1.5;\n`;\n","import {\n    CardInfo,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n    StyledMediaCard,\n    StyledMedialist,\n} from './MediaList.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { IMAGES_BASE_URL_W300, IMAGES_BASE_URL_W600 } from 'common/constants';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { normalizeMoviesData } from 'common/services/normalize/normalizeMoviesData';\n\nexport const MediaList = ({ media, mediaTypes }) => {\n    const data = normalizeMoviesData(media, mediaTypes);\n\n    return (\n        <StyledMedialist>\n            {data.map(\n                ({\n                    id,\n                    vote_average,\n                    movie_title,\n                    media_type,\n                    poster_path,\n                    release,\n                }) => (\n                    <StyledMediaCard key={id}>\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/movie-${id}`\n                                    : `/tv-shows/tv-${id}`\n                            }\n                        >\n                            <ImgWrapper>\n                                <ScoreBar\n                                    size={0.7}\n                                    rating={vote_average}\n                                    style={{\n                                        position: 'absolute',\n                                        top: 10,\n                                        right: 10,\n                                        zIndex: 1,\n                                    }}\n                                />\n                                <picture>\n                                    <source\n                                        srcSet={\n                                            poster_path\n                                                ? `${\n                                                      IMAGES_BASE_URL_W300 +\n                                                      poster_path\n                                                  } 1x, ${\n                                                      IMAGES_BASE_URL_W600 +\n                                                      poster_path\n                                                  } 2x`\n                                                : noPoster\n                                        }\n                                    />\n                                    <img\n                                        src={\n                                            poster_path\n                                                ? `${\n                                                      IMAGES_BASE_URL_W300 +\n                                                      poster_path\n                                                  }`\n                                                : noPoster\n                                        }\n                                        alt={movie_title}\n                                    />\n                                </picture>\n                            </ImgWrapper>\n                            <CardInfo>\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <p>{release}</p>\n                            </CardInfo>\n                        </MovieLink>\n                    </StyledMediaCard>\n                )\n            )}\n        </StyledMedialist>\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMoviesData = (data, mediaTypes) => {\n    return data.map(\n        ({\n            id,\n            vote_average,\n            name,\n            title,\n            media_type,\n            original_title,\n            original_name,\n            poster_path,\n            release_date,\n            first_air_date,\n        }) => {\n            let release;\n            if (release_date) {\n                release = formatDate(release_date);\n            } else if (first_air_date) {\n                release = formatDate(first_air_date);\n            } else release = 'N/a';\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            return {\n                id,\n                movie_title,\n                media_type: media_type ? media_type : mediaTypes,\n\n                release,\n                vote_average:\n                    vote_average > 0 ? Math.round(vote_average * 10) : 'NR',\n                poster_path,\n            };\n        }\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Page404Styled = styled.div`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.white};\n    & h1 {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & p {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & img {\n        margin: 0 auto;\n    }\n`;\n\nexport const TitleStyled = styled.h1`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n\nexport const InfoTextStyled = styled.p`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n","import { InfoTextStyled, Page404Styled, TitleStyled } from './Page404.styled';\nimport page_404 from '../../../../../../images/no-found.png';\n\nexport const Page404 = () => {\n    return (\n        <Page404Styled>\n            <TitleStyled>Ooops!</TitleStyled>\n            <img width={300} src={page_404} alt=\"page-404\" />\n            <InfoTextStyled>Page no found</InfoTextStyled>\n        </Page404Styled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const PaginationBox = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    &.top {\n        padding-bottom: ${({ theme }) => theme.spacing.retreatS};\n        @media ${({ theme }) => theme.breakpoints.s} {\n            padding-bottom: ${({ theme }) => theme.spacing.retreatM};\n        }\n        @media ${({ theme }) => theme.breakpoints.xl} {\n            padding-bottom: ${({ theme }) => theme.spacing.retreatL};\n        }\n    }\n    &.bottom {\n        padding-top: ${({ theme }) => theme.spacing.retreatS};\n        @media ${({ theme }) => theme.breakpoints.s} {\n            padding-top: ${({ theme }) => theme.spacing.retreatM};\n        }\n        @media ${({ theme }) => theme.breakpoints.xl} {\n            padding-top: ${({ theme }) => theme.spacing.retreatL};\n        }\n    }\n`;\n\nexport const DotButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 6px;\n    color: ${({ theme }) => theme.colors.light};\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    background-color: ${({ theme }) => theme.colors.hover};\n    & svg {\n        fill: currentColor;\n    }\n    &:hover,\n    &[aria-current='true'] {\n        color: ${({ theme }) => theme.colors.white};\n        background-color: ${({ theme }) => theme.colors.accent};\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: 40px;\n        height: 40px;\n    }\n    &:disabled {\n        cursor: not-allowed;\n        color: #636363;\n        background-color: #4a4a4a;\n    }\n`;\n\nexport const DotStart = styled(DotButton)``;\nexport const DotEnd = styled(DotButton)`\n    & svg {\n        transform: rotate(180deg);\n    }\n`;\nexport const DotPrev = styled(DotButton)``;\nexport const DotNext = styled(DotButton)`\n    & svg {\n        transform: rotate(180deg);\n    }\n`;\nexport const Dot = styled(DotButton)``;\n","import {\n    Dot,\n    DotEnd,\n    DotNext,\n    DotPrev,\n    DotStart,\n    PaginationBox,\n} from './Pagination.styled';\nimport sprite from '../../../../../../images/sprite.svg';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Svg } from 'ui/Layout/globalComponents/components/Svg/Svg';\n\nexport const Pagination = ({ totalPages, serviceClass }) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [page, setPage] = useState(1);\n    const [currentPage, setCurrentPage] = useState(null);\n    const query = searchParams.get('query');\n    // const currentPage = Number(searchParams.get('page'));\n\n    useEffect(() => {\n        const getCurrentPage = Number(searchParams.get('page'));\n        setCurrentPage(getCurrentPage);\n    }, [searchParams]);\n\n    useEffect(() => {\n        if (totalPages > 2) {\n            let res = currentPage;\n            if (currentPage === 1) res += 1;\n            if (currentPage === totalPages) res -= 1;\n            setPage(res);\n        }\n    }, [currentPage, totalPages]);\n\n    const hendleClick = e => {\n        const toPage = e.target.getAttribute('datatype');\n        if (toPage !== currentPage) setSearchParams({ query, page: toPage });\n    };\n\n    return (\n        <PaginationBox className={serviceClass}>\n            {totalPages > 2 && (\n                <DotStart\n                    disabled={currentPage === 1}\n                    datatype={1}\n                    onClick={hendleClick}\n                >\n                    <Svg w={20} h={20} use={`${sprite}#icon-double-arrow`} />\n                </DotStart>\n            )}\n            {totalPages > 2 && (\n                <DotPrev\n                    disabled={currentPage === 1}\n                    datatype={currentPage - 1}\n                    onClick={hendleClick}\n                >\n                    <Svg w={20} h={20} use={`${sprite}#icon-arrow`} />\n                </DotPrev>\n            )}\n            {totalPages > 1 && (\n                <Dot\n                    aria-current={\n                        totalPages === 2\n                            ? currentPage === Number(page)\n                            : currentPage === Number(page) - 1\n                    }\n                    onClick={hendleClick}\n                    datatype={currentPage === 1 ? currentPage : currentPage - 1}\n                >\n                    {currentPage === 1 ? currentPage : currentPage - 1}\n                </Dot>\n            )}\n            {totalPages > 1 && (\n                <Dot\n                    aria-current={\n                        totalPages === 2\n                            ? currentPage === Number(page) + 1\n                            : currentPage === Number(page)\n                    }\n                    onClick={hendleClick}\n                    datatype={\n                        totalPages === 2\n                            ? totalPages\n                            : currentPage === 1\n                            ? currentPage + 1\n                            : currentPage === totalPages\n                            ? currentPage - 1\n                            : currentPage\n                    }\n                >\n                    {totalPages === 2\n                        ? totalPages\n                        : currentPage === 1\n                        ? currentPage + 1\n                        : currentPage === totalPages\n                        ? currentPage - 1\n                        : currentPage}\n                </Dot>\n            )}\n            {totalPages > 2 && (\n                <Dot\n                    aria-current={currentPage === Number(page) + 1}\n                    onClick={hendleClick}\n                    datatype={\n                        currentPage === totalPages\n                            ? currentPage\n                            : currentPage === 1\n                            ? currentPage + 2\n                            : currentPage + 1\n                    }\n                >\n                    {currentPage === totalPages\n                        ? currentPage\n                        : currentPage === 1\n                        ? currentPage + 2\n                        : currentPage + 1}\n                </Dot>\n            )}\n            {totalPages > 2 && (\n                <DotNext\n                    disabled={currentPage === totalPages}\n                    datatype={currentPage + 1}\n                    onClick={hendleClick}\n                >\n                    <Svg w={20} h={20} use={`${sprite}#icon-arrow`} />\n                </DotNext>\n            )}\n            {totalPages > 2 && (\n                <DotEnd\n                    disabled={currentPage === totalPages}\n                    onClick={hendleClick}\n                    datatype={totalPages}\n                >\n                    <Svg w={20} h={20} use={`${sprite}#icon-double-arrow`} />\n                </DotEnd>\n            )}\n        </PaginationBox>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledPersonList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n    grid-gap: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n\nexport const StyledPersonCard = styled.li`\n    display: flex;\n    flex-direction: column;\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n\n    &:hover,\n    &:focus {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img,\n    &:focus img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 100%;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const CardInfo = styled.div`\n    position: relative;\n    flex-grow: 1;\n    width: 100%;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const PersonTitle = styled.h2`\n    text-align: center;\n    line-height: 1.5;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n`;\n","import { Link } from 'react-router-dom';\nimport {\n    CardInfo,\n    ImgWrapper,\n    PersonTitle,\n    StyledPersonCard,\n    StyledPersonList,\n} from './PersonsList.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\n\nexport const PersonsList = ({ persons }) => {\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300_and_h450_bestv2';\n    const IMAGES_BASE_URL_RETINA =\n        'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n\n    return (\n        <StyledPersonList>\n            {persons.map(({ id, name, profile_path }) => (\n                <StyledPersonCard key={id}>\n                    <Link to={`/person/${id}`}>\n                        <ImgWrapper>\n                            <picture>\n                                <source\n                                    srcSet={\n                                        profile_path\n                                            ? `${\n                                                  IMAGES_BASE_URL + profile_path\n                                              } 1x, ${\n                                                  IMAGES_BASE_URL_RETINA +\n                                                  profile_path\n                                              } 2x`\n                                            : noPoster\n                                    }\n                                />\n\n                                <img\n                                    src={\n                                        profile_path\n                                            ? IMAGES_BASE_URL + profile_path\n                                            : noPoster\n                                    }\n                                    alt={name}\n                                />\n                            </picture>\n                        </ImgWrapper>\n                        <CardInfo>\n                            <PersonTitle>{name}</PersonTitle>\n                        </CardInfo>\n                    </Link>\n                </StyledPersonCard>\n            ))}\n        </StyledPersonList>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMediaByName } from 'common/services/api';\nimport { Pagination } from './Pagination/Pagination';\nimport { PersonsList } from '../../PersonDetails/PersonsList/PersonsList';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { MediaList } from '../../Home/MediaList/MediaList';\nimport { Page404 } from './Page404/Page404';\n\nexport const Search = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams] = useSearchParams();\n    const [first, setFirst] = useState(true);\n    const [total, setTotal] = useState(0);\n    const [medias, setMedias] = useState([]);\n    const [error, setError] = useState(null);\n    const { pathname } = useLocation();\n    const path = pathname.split('/')[1];\n\n    useEffect(() => {\n        const query = searchParams.get('query');\n        const page = searchParams.get('page');\n        if (!query) return;\n        setIsLoading(true);\n        getMediaByName(\n            path === 'movies' ? 'movie' : path === 'tv-shows' ? 'tv' : 'person',\n            query,\n            page\n        )\n            .then(data => {\n                setMedias(data.results);\n                setTotal(data.total_pages);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                setIsLoading(false);\n                setFirst(false);\n            });\n    }, [searchParams, path]);\n\n    return (\n        <section>\n            <Container>\n                {isLoading && <Loader />}\n                {total > 0 && (\n                    <Pagination totalPages={total} serviceClass=\"top\" />\n                )}\n                {medias && path !== 'person' && (\n                    <MediaList\n                        media={medias}\n                        mediaTypes={path === 'movies' ? 'movie' : 'tv'}\n                    />\n                )}\n                {medias && path === 'person' && (\n                    <PersonsList persons={medias} />\n                )}\n                {!first && medias.length < 1 && <Page404 />}\n                {total > 0 && (\n                    <Pagination totalPages={total} serviceClass=\"bottom\" />\n                )}\n                {error && <ToastContainer />}\n            </Container>\n        </section>\n    );\n};\n"],"names":["IMAGES_BASE_URL_W300","IMAGES_BASE_URL_W600","IMAGES_BASE_URL_W1280","axios","API_KEY","lang","getMovies","mediaType","trands","data","getMediaByName","mediaTypes","q","page","getDetails","movieId","details","getTrailer","getPersonById","personId","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Score","styled","size","ScoreProgressBar","ScoreCircle","length","BgrCircle","ScoreSpan","ScoreBar","rating","style","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","viewBox","cx","cy","r","ref","StyledMedialist","theme","spacing","retreatS","breakpoints","s","retreatM","m","xl","retreatL","xxl","StyledMediaCard","colors","accent","shadow","MovieLink","Link","ImgWrapper","white","CardInfo","MovieTitle","fontSizes","small","MediaList","map","release","id","vote_average","name","title","media_type","original_title","original_name","poster_path","release_date","first_air_date","movie_title","round","normalizeMoviesData","media","to","right","zIndex","srcSet","noPoster","src","alt","Page404Styled","TitleStyled","themeText","baseTransition","InfoTextStyled","Page404","page_404","PaginationBox","DotButton","light","hover","xs","DotStart","DotEnd","DotPrev","DotNext","Dot","Pagination","totalPages","serviceClass","useSearchParams","searchParams","setSearchParams","setPage","currentPage","setCurrentPage","query","get","getCurrentPage","Number","res","hendleClick","e","toPage","target","getAttribute","className","disabled","datatype","onClick","Svg","w","h","use","sprite","StyledPersonList","StyledPersonCard","PersonTitle","PersonsList","persons","IMAGES_BASE_URL","profile_path","Search","isLoading","setIsLoading","first","setFirst","total","setTotal","medias","setMedias","error","setError","path","useLocation","pathname","split","then","results","total_pages","catch","err","message","toast","finally","Container"],"sourceRoot":""}