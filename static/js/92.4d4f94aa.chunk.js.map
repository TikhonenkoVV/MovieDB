{"version":3,"file":"static/js/92.4d4f94aa.chunk.js","mappings":"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","sources":["components/FullCast/FullCast.styled.js","components/FullCast/FullCast.jsx","components/Page404/Page404.styled.js","components/Page404/Page404.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n    padding-top: 24px;\n    padding-bottom: 24px;\n    color: ${({ theme }) => theme.colors.themeText};\n    &.head-section {\n        background-color: ${({ theme }) => theme.colors.personBackground};\n    }\n`;\n\nexport const MovieWrapper = styled.div`\n    @media (min-width: 533px) {\n        display: flex;\n        gap: 20px;\n    }\n`;\n\nexport const MoviePoster = styled.img`\n    width: 100px;\n    object-fit: cover;\n    aspect-ratio: 2 / 3;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        gap: 20px;\n    }\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n`;\n\nexport const CastCrewWrapper = styled.div`\n    flex-basis: calc((100% - 24px) / 2);\n    border: 1px solid #808080;\n    padding: 16px;\n`;\n\nexport const MinorTitle = styled.h2`\n    margin-bottom: 16px;\n`;\n\nexport const CardListItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const MajorTitle = styled.h3`\n    margin-bottom: 16px;\n`;\n\nexport const Card = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const Poster = styled.img`\n    border-radius: 5px;\n`;\n","import { Container } from 'components/Container/Container';\nimport {\n    Card,\n    CastCrewWrapper,\n    StyledLink,\n    StyledSection,\n    MinorTitle,\n    MajorTitle,\n    CardListItem,\n    Poster,\n    MovieWrapper,\n    MoviePoster,\n    MovieInfoWrapper,\n    MovieInfoTitle,\n} from './FullCast.styled';\nimport { useEffect, useState } from 'react';\nimport { getDetails } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport {\n    normalizeCast,\n    normalizeCrew,\n    normalizeMovieData,\n} from 'services/normalize';\nimport { Loader } from 'components/Loader/Loader';\nimport { Page404 } from 'components/Page404/Page404';\n\nexport const FullCast = () => {\n    const { mediaId } = useParams();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [castArray, setCastArray] = useState();\n    const [crewArray, setCrewArray] = useState();\n    const [movie, setMovie] = useState(null);\n\n    if (movie) console.log(movie.release);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const type = mediaId.split('-')[0];\n        const id = mediaId.split('-')[1];\n        getDetails(\n            type,\n            id,\n            type === 'movie' ? '/credits' : '/aggregate_credits'\n        )\n            .then(data => {\n                setCastArray(normalizeCast(data.cast));\n                setCrewArray(normalizeCrew(data.crew));\n            })\n            .catch(err => setError(err.message))\n            .finally(() => {\n                getDetails(type, id, '')\n                    .then(data => setMovie(normalizeMovieData(data)))\n                    .catch(err => {\n                        setError(err.message);\n                    })\n                    .finally(() => setIsLoading(false));\n            });\n    }, [mediaId]);\n\n    return (\n        <>\n            {movie && (\n                <StyledSection className=\"head-section\">\n                    <Container>\n                        <MovieWrapper>\n                            <MoviePoster\n                                src={movie.poster_path}\n                                alt={movie.name}\n                            />\n                            <MovieInfoWrapper>\n                                <MovieInfoTitle>{movie.name}</MovieInfoTitle>\n                                {movie.release.release_date && (\n                                    <p>\n                                        {movie.release.title}\n                                        {movie.release.release_date}\n                                    </p>\n                                )}\n                                {movie.first_air.first_air_date && (\n                                    <p>\n                                        {movie.first_air.title}\n                                        {movie.first_air.first_air_date}\n                                    </p>\n                                )}\n                            </MovieInfoWrapper>\n                        </MovieWrapper>\n                    </Container>\n                </StyledSection>\n            )}\n            <StyledSection>\n                {isLoading && <Loader />}\n                <Container style={{ display: 'flex', gap: '24px' }}>\n                    <CastCrewWrapper>\n                        <MinorTitle>Cast</MinorTitle>\n                        <ul>\n                            {castArray?.map(\n                                ({\n                                    id,\n                                    castId,\n                                    personName,\n                                    smallPoster,\n                                    role,\n                                }) => (\n                                    <Card key={castId}>\n                                        <StyledLink to={`/person/${id}`}>\n                                            <Poster\n                                                src={smallPoster}\n                                                alt={personName}\n                                            />\n                                            <div>\n                                                <h3>{personName}</h3>\n                                                <p>{role}</p>\n                                            </div>\n                                        </StyledLink>\n                                    </Card>\n                                )\n                            )}\n                        </ul>\n                    </CastCrewWrapper>\n                    <CastCrewWrapper>\n                        <MinorTitle>Crew</MinorTitle>\n                        <ul>\n                            {crewArray?.crew?.map(el => (\n                                <CardListItem key={Object.keys(el)[0]}>\n                                    <MajorTitle\n                                        style={{ textTransform: 'capitalize' }}\n                                    >\n                                        {Object.keys(el)[0]}\n                                    </MajorTitle>\n                                    <ul>\n                                        {el[Object.keys(el)[0]]?.map(\n                                            ({\n                                                id,\n                                                credit_id,\n                                                job,\n                                                personName,\n                                                poster,\n                                            }) => (\n                                                <Card key={credit_id}>\n                                                    <StyledLink\n                                                        to={`/person/${id}`}\n                                                    >\n                                                        <Poster\n                                                            src={poster}\n                                                            alt={personName}\n                                                        />\n                                                        <div>\n                                                            <h3>\n                                                                {personName}\n                                                            </h3>\n                                                            <p>{job}</p>\n                                                        </div>\n                                                    </StyledLink>\n                                                </Card>\n                                            )\n                                        )}\n                                    </ul>\n                                </CardListItem>\n                            ))}\n                        </ul>\n                    </CastCrewWrapper>\n                </Container>\n                {error && <Page404 />}\n            </StyledSection>\n        </>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Page404Styled = styled.div`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.white};\n    & h1 {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & p {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & img {\n        margin: 0 auto;\n    }\n`;\n\nexport const TitleStyled = styled.h1`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n\nexport const InfoTextStyled = styled.p`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n","import { InfoTextStyled, Page404Styled, TitleStyled } from './Page404.styled';\nimport page_404 from '../../images/no-found.png';\n\nexport const Page404 = () => {\n    return (\n        <Page404Styled>\n            <TitleStyled>Ooops!</TitleStyled>\n            <img width={300} src={page_404} alt=\"page-404\" />\n            <InfoTextStyled>Page no found</InfoTextStyled>\n        </Page404Styled>\n    );\n};\n"],"names":["StyledSection","styled","theme","colors","themeText","personBackground","MovieWrapper","MoviePoster","MovieInfoWrapper","baseTransition","breakpoints","s","MovieInfoTitle","fontSizes","xxl","CastCrewWrapper","MinorTitle","CardListItem","MajorTitle","Card","StyledLink","Link","Poster","FullCast","mediaId","useParams","useState","isLoading","setIsLoading","error","setError","castArray","setCastArray","crewArray","setCrewArray","movie","setMovie","console","log","release","useEffect","type","split","id","getDetails","then","data","normalizeCast","cast","normalizeCrew","crew","catch","err","message","finally","normalizeMovieData","className","Container","src","poster_path","alt","name","release_date","title","first_air","first_air_date","Loader","style","display","gap","map","castId","personName","smallPoster","role","to","el","textTransform","Object","keys","credit_id","job","poster","Page404","Page404Styled","white","TitleStyled","InfoTextStyled","width","page_404"],"sourceRoot":""}