{"version":3,"file":"static/js/880.86d42dae.chunk.js","mappings":"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","sources":["common/services/api.js","common/services/dateOperations.js","common/services/normalize/normalizeMovieData.js","ui/Layout/globalComponents/components/Loader.jsx","ui/Layout/pages/Media/MediaLayout/MediaLayout.styled.js","ui/Layout/pages/Media/MediaLayout/MediaLayout.jsx","ui/Layout/pages/globalLayouts/Search/Page404/Page404.styled.js","ui/Layout/pages/globalLayouts/Search/Page404/Page404.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n// const lang = '&language=uk-UA';\nconst lang = '&language=en-US';\n// const lang = '&language=ru-RU';\n\nexport const getMovies = async (mediaType, trands) => {\n    const { data } = await axios.get(\n        `trending/${mediaType}/${trands}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getMediaByName = async (mediaTypes, q, page) => {\n    const { data } = await axios.get(\n        `search/${mediaTypes}?api_key=${API_KEY + lang}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getDetails = async (mediaType, movieId, details) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}${details}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getTrailer = async (mediaType, movieId) => {\n    const { data } = await axios.get(\n        `${mediaType}/${movieId}/videos?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n\nexport const getPersonsByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/person?include_adult=false&api_key=${\n            API_KEY + lang\n        }&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const getPersonById = async personId => {\n    const { data } = await axios.get(\n        `person/${personId}?api_key=${API_KEY + lang}`\n    );\n    return data;\n};\n","export const formatDate = date => {\n    const options = {\n        // weekday: 'long',\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMovieData = (data, mediaTypes) => {\n    const {\n        id,\n        belongs_to_collection,\n        name,\n        original_name,\n        title,\n        original_title,\n        overview,\n        genres,\n        release_date,\n        first_air_date,\n        vote_average,\n        created_by,\n        poster_path,\n        backdrop_path,\n    } = data;\n    let newReleaseDate;\n    let newAirDate;\n    if (release_date) {\n        newReleaseDate = formatDate(release_date);\n    } else newReleaseDate = false;\n    if (first_air_date) {\n        newAirDate = formatDate(first_air_date);\n    } else newAirDate = false;\n    const rating = vote_average > 0 ? Math.round(vote_average * 10) : 'NR';\n    const personName = name\n        ? name\n        : original_name\n        ? original_name\n        : title\n        ? title\n        : original_title;\n    const creators = [];\n    created_by?.map(el =>\n        creators.push({ credit_id: el.credit_id, name: el.name })\n    );\n    return {\n        id,\n        belongs_to_collection: belongs_to_collection\n            ? belongs_to_collection.id\n            : null,\n        vote_average: rating,\n        name: personName,\n        release: {\n            release_date: newReleaseDate,\n            title: 'Release date: ',\n        },\n        first_air: {\n            first_air_date: newAirDate,\n            title: 'First air date: ',\n        },\n        overview:\n            overview !== ''\n                ? overview\n                : 'Sorry, but there is no overview for this movie.',\n        genres:\n            genres.length > 0\n                ? genres\n                : [{ id: '', name: 'No information available' }],\n        poster_path,\n        backdrop_path,\n        created_by: creators.length > 0 ? creators : null,\n    };\n};\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { BackDrop } from '../layouts/BackDrop/BackDrop';\n\nexport const Loader = () => {\n    return (\n        <BackDrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </BackDrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n    color: ${({ theme }) => theme.colors.themeText};\n    background-color: ${({ theme }) => theme.colors.mediumBackground};\n`;\n\nexport const MovieWrapper = styled.div`\n    text-align: center;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: flex;\n        gap: 20px;\n        text-align: left;\n    }\n`;\n\nexport const PosterWrapper = styled.picture`\n    display: block;\n    width: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 16px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: auto;\n        margin-bottom: 0;\n        margin-left: 0;\n        margin-right: 0;\n    }\n`;\n\nexport const MoviePoster = styled.img`\n    width: 100px;\n    object-fit: cover;\n    aspect-ratio: 2 / 3;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.m} {\n        gap: 20px;\n    }\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport {\n    MovieInfoTitle,\n    MovieInfoWrapper,\n    MoviePoster,\n    MovieWrapper,\n    PosterWrapper,\n    StyledSection,\n} from './MediaLayout.styled';\nimport noPoster from '../../../../../images/no-poster.jpg';\nimport { normalizeMovieData } from 'common/services/normalize/normalizeMovieData';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { getDetails } from 'common/services/api';\nimport { Page404 } from '../../globalLayouts/Search/Page404/Page404';\n\nexport const MediaLayout = () => {\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n    const IMAGES_BASE_URL_RETINA = 'https://image.tmdb.org/t/p/w400';\n\n    const { mediaId } = useParams();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const type = mediaId.split('-')[0];\n        const id = mediaId.split('-')[1];\n        getDetails(type, id, '')\n            .then(data => setMovie(normalizeMovieData(data)))\n            .catch(err => setError(err.message))\n            .finally(() => setIsLoading(false));\n    }, [mediaId]);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {movie && (\n                <StyledSection className=\"padding-top\">\n                    <Container>\n                        <MovieWrapper>\n                            <PosterWrapper>\n                                <source\n                                    srcSet={\n                                        movie.poster_path\n                                            ? `${\n                                                  IMAGES_BASE_URL +\n                                                  movie.poster_path\n                                              } 1x, ${\n                                                  IMAGES_BASE_URL_RETINA +\n                                                  movie.poster_path\n                                              } 2x`\n                                            : noPoster\n                                    }\n                                />\n\n                                <MoviePoster\n                                    src={\n                                        movie.poster_path\n                                            ? IMAGES_BASE_URL +\n                                              movie.poster_path\n                                            : noPoster\n                                    }\n                                    alt={movie.name}\n                                />\n                            </PosterWrapper>\n                            <MovieInfoWrapper>\n                                <MovieInfoTitle>{movie.name}</MovieInfoTitle>\n                                {movie.release.release_date && (\n                                    <p>\n                                        {movie.release.title}\n                                        {movie.release.release_date}\n                                    </p>\n                                )}\n                                {movie.first_air.first_air_date && (\n                                    <p>\n                                        {movie.first_air.title}\n                                        {movie.first_air.first_air_date}\n                                    </p>\n                                )}\n                            </MovieInfoWrapper>\n                        </MovieWrapper>\n                    </Container>\n                </StyledSection>\n            )}\n            <Suspense>\n                <Outlet />\n            </Suspense>\n            {error && <Page404 />}\n        </>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Page404Styled = styled.div`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.white};\n    & h1 {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & p {\n        font-size: ${({ theme }) => theme.fontSizes.xxl};\n    }\n    & img {\n        margin: 0 auto;\n    }\n`;\n\nexport const TitleStyled = styled.h1`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n\nexport const InfoTextStyled = styled.p`\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n`;\n","import { InfoTextStyled, Page404Styled, TitleStyled } from './Page404.styled';\nimport page_404 from '../../../../../../images/no-found.png';\n\nexport const Page404 = () => {\n    return (\n        <Page404Styled>\n            <TitleStyled>Ooops!</TitleStyled>\n            <img width={300} src={page_404} alt=\"page-404\" />\n            <InfoTextStyled>Page no found</InfoTextStyled>\n        </Page404Styled>\n    );\n};\n"],"names":["axios","API_KEY","lang","getMovies","mediaType","trands","data","getMediaByName","mediaTypes","q","page","getDetails","movieId","details","getTrailer","getPersonById","personId","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","normalizeMovieData","newReleaseDate","newAirDate","id","belongs_to_collection","name","original_name","title","original_title","overview","genres","release_date","first_air_date","vote_average","created_by","poster_path","backdrop_path","rating","round","personName","creators","map","el","push","credit_id","release","first_air","length","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","StyledSection","styled","theme","colors","themeText","mediumBackground","MovieWrapper","breakpoints","xs","PosterWrapper","MoviePoster","MovieInfoWrapper","baseTransition","m","MovieInfoTitle","fontSizes","xxl","MediaLayout","IMAGES_BASE_URL","mediaId","useParams","useState","isLoading","setIsLoading","error","setError","movie","setMovie","useEffect","type","split","then","catch","err","message","finally","className","Container","srcSet","noPoster","src","alt","Suspense","Page404","Page404Styled","white","TitleStyled","InfoTextStyled","page_404"],"sourceRoot":""}