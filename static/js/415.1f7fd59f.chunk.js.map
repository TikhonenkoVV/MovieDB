{"version":3,"file":"static/js/415.1f7fd59f.chunk.js","mappings":"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","sources":["components/MediaList/MediaList.styled.js","components/MediaList/MediaList.jsx","components/ScoreBar/ScoreBar.styled.js","components/ScoreBar/ScoreBar.jsx","services/set-color.js","components/Select/Select.styled.js","components/Select/Select.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ImgWrapper = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    width: 100%;\n    height: 100%;\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: block;\n    flex-grow: 1;\n`;\n\nexport const CardOverlay = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n    padding: 20px;\n    background-color: #000000e8;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n    )\n        ? 'transform: translateY(0); opacity: 1;'\n        : 'transform: translateY(100%); opacity: 0;'}\n`;\n\nexport const MovieTitle = styled.h2`\n    display: flex;\n    justify-content: center;\n    max-height: 81px;\n    text-align: center;\n    overflow: hidden;\n    line-height: 1.5;\n    color: ${({ theme }) => theme.colors.white};\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n`;\n\nexport const Description = styled.p`\n    padding: 4px 10px;\n    background-color: ${({ theme }) => theme.colors.white};\n    border-radius: 12px;\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: 700;\n`;\n","import { Grid, GridItem } from 'components/App.styled';\nimport { useLocation } from 'react-router-dom';\nimport {\n    CardOverlay,\n    Description,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n} from './MediaList.styled';\nimport { normalizeMoviesData } from 'services/normalize';\nimport { ScoreBar } from 'components/ScoreBar/ScoreBar';\n\nexport const MediaList = ({ movies, mediaTypes }) => {\n    const location = useLocation();\n    const data = normalizeMoviesData(movies, mediaTypes);\n    return (\n        <Grid>\n            {data.map(\n                ({ id, vote_average, movie_title, media_type, poster }) => (\n                    <GridItem key={id}>\n                        <ScoreBar\n                            rating={vote_average}\n                            style={{\n                                position: 'absolute',\n                                top: 10,\n                                left: 10,\n                                zIndex: 2,\n                            }}\n                        />\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/${media_type}/${id}`\n                                    : `/tv-shows/${media_type}/${id}`\n                            }\n                            state={{ from: location }}\n                        >\n                            <ImgWrapper>\n                                <img src={poster} alt={movie_title} />\n                                <CardOverlay className=\"js-overlay\">\n                                    <MovieTitle>{movie_title}</MovieTitle>\n                                    <Description>Ð¡lick for details</Description>\n                                </CardOverlay>\n                            </ImgWrapper>\n                        </MovieLink>\n                    </GridItem>\n                )\n            )}\n        </Grid>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 60px;\n    height: 60px;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 54px;\n        height: 54px;\n        background-color: ${({ theme }) => theme.colors.accent};\n    }\n    pointer-events: none;\n`;\n\nexport const SpanStyled = styled.span`\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: 6;\n    transform: translate(3px, 3px);\n    stroke-dasharray: 138;\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const ScoreSpan = styled.span``;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n    SpanStyled,\n} from './ScoreBar.styled';\nimport { setColor } from 'services/set-color';\n\nexport const ScoreBar = ({ rating, style }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score style={{ ...style }}>\n            <SpanStyled>\n                <ScoreProgressBar width={50} height={50}>\n                    <ScoreCircle\n                        color={currenColor}\n                        length={currentLength}\n                        ref={AnimCircle}\n                        cx={22}\n                        cy={22}\n                        r={22}\n                    ></ScoreCircle>\n                </ScoreProgressBar>\n                <ScoreSpan>{rating}</ScoreSpan>\n                {!isNaN(rating) && ' %'}\n            </SpanStyled>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    cursor: pointer;\n    z-index: 3;\n`;\n\nexport const BtnSelectStyled = styled.button`\n    border: none;\n    padding-left: 5px;\n    padding-right: 20px;\n    background-color: transparent;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.5;\n    /* color: ${props => props.theme.colors.wrapperSelectorColor}; */\n    cursor: pointer;\n\n    &:before {\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 50%;\n        border: 1px solid ${({ theme }) => theme.colors.themeText};\n        border-width: 0 2px 2px 0;\n        padding: 3px;\n        transform: translateY(${({ isOpen }) => (!isOpen ? '-80%' : '-30%')})\n            rotate(${({ isOpen }) => (!isOpen ? '45deg' : '-135deg')});\n        transition: transform 250ms;\n        cursor: pointer;\n    }\n`;\n\nexport const DivListStyled = styled.div`\n    position: absolute;\n    top: 100%;\n    /* width: 82px; */\n    border-radius: 8px;\n    padding: 18px;\n    margin: 0;\n    margin-top: 10px;\n    background-color: ${({ theme }) => theme.colors.mainBackground};\n    transform: ${props => (props.isOpen ? 'scaleY(1)' : 'scaleY(0)')};\n    transform-origin: top;\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    box-shadow: ${props => props.theme.colors.boxShadowSelector};\n    border: 1px solid ${props => props.theme.colors.borderSelectorColor};\n`;\n\nexport const UlListStyled = styled.ul`\n    padding: 0;\n    margin: 0;\n`;\n\nexport const LiStyled = styled.li`\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: ${props => props.theme.colors.textSelectorColor};\n\n    &:hover {\n        color: ${props => props.theme.colors.hoverSelectorColor};\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n    DivStyled,\n    BtnSelectStyled,\n    DivListStyled,\n    UlListStyled,\n    LiStyled,\n} from './Select.styled';\n\nexport const Select = ({ initial, onChange }) => {\n    const [currVal, setCurrVal] = useState('All');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const [options, setOptions] = useState([\n        { all: 'All' },\n        { movie: 'Movie' },\n        { tv: 'Tv' },\n    ]);\n\n    const handleChange = event => {\n        event.stopPropagation();\n        setCurrVal(event.target.innerText);\n        onChange(event.target.getAttribute('data-id'));\n        setIsOpen(false);\n    };\n\n    const handleClick = event => {\n        event.stopPropagation();\n        setIsOpen(!isOpen);\n    };\n\n    useEffect(() => {\n        if (initial?.options) setOptions(initial.options);\n    }, [initial]);\n\n    return (\n        <DivStyled>\n            <BtnSelectStyled isOpen={isOpen} onClick={handleClick}>\n                {currVal ? currVal : 'Theme'}\n            </BtnSelectStyled>\n\n            <DivListStyled isOpen={isOpen} onClick={e => e.stopPropagation()}>\n                <UlListStyled>\n                    {options?.map(el => (\n                        <LiStyled\n                            data-id={Object.keys(el)}\n                            key={Object.keys(el)}\n                            onClick={handleChange}\n                        >\n                            {Object.values(el)}\n                        </LiStyled>\n                    ))}\n                </UlListStyled>\n            </DivListStyled>\n        </DivStyled>\n    );\n};\n","import {\n    Container,\n    HomeTitle,\n    TrendsBtn,\n    TrendsBtnWrapper,\n    TrendsTogler,\n} from 'components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MediaList } from 'components/MediaList/MediaList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Select } from 'components/Select/Select';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [trands, setTrends] = useState('day');\n    const [mediaTypes, setMediaTypes] = useState('all');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getMovies(mediaTypes, trands)\n            .then(data => {\n                setMovies(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [mediaTypes, trands]);\n\n    const onBtnWeekClick = () => {\n        setTrends('week');\n    };\n\n    const onBtnDayClick = () => {\n        setTrends('day');\n    };\n\n    const hendleSelectChange = mediaType => {\n        setMediaTypes(mediaType);\n    };\n\n    return (\n        <Container>\n            {isLoading && <Loader />}\n            <TrendsTogler>\n                <HomeTitle>Trending</HomeTitle>\n                <TrendsBtnWrapper>\n                    <TrendsBtn\n                        datatype=\"day\"\n                        className={trands === 'day' ? 'active' : ''}\n                        type=\"button\"\n                        onClick={onBtnDayClick}\n                    >\n                        today\n                    </TrendsBtn>\n                    <TrendsBtn\n                        className={trands === 'week' ? 'active' : ''}\n                        type=\"button\"\n                        onClick={onBtnWeekClick}\n                    >\n                        this week\n                    </TrendsBtn>\n                </TrendsBtnWrapper>\n                <Select onChange={hendleSelectChange} />\n            </TrendsTogler>\n            <MediaList movies={movies} />\n            {error && <ToastContainer />}\n        </Container>\n    );\n};\n\nexport default Home;\n"],"names":["ImgWrapper","styled","MovieLink","Link","CardOverlay","test","navigator","userAgent","MovieTitle","theme","colors","white","fontSizes","medium","Description","accent","small","MediaList","movies","mediaTypes","location","useLocation","data","normalizeMoviesData","map","id","vote_average","movie_title","media_type","poster","ScoreBar","rating","style","position","top","left","zIndex","to","state","from","src","alt","className","Score","SpanStyled","ScoreProgressBar","ScoreCircle","color","length","ScoreSpan","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","width","height","ref","cx","cy","r","DivStyled","themeText","baseTransition","BtnSelectStyled","props","wrapperSelectorColor","isOpen","DivListStyled","mainBackground","boxShadowSelector","borderSelectorColor","UlListStyled","LiStyled","textSelectorColor","hoverSelectorColor","Select","initial","onChange","currVal","setCurrVal","setIsOpen","all","movie","tv","options","setOptions","handleChange","event","stopPropagation","target","innerText","getAttribute","onClick","e","el","Object","keys","values","isLoading","setIsLoading","trands","setTrends","setMediaTypes","setMovies","error","setError","getMovies","then","results","catch","err","message","toast","finally","datatype","type","mediaType"],"sourceRoot":""}