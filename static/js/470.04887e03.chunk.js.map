{"version":3,"file":"static/js/470.04887e03.chunk.js","mappings":"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","sources":["common/constants.js","common/services/dateOperations.js","common/services/normalize/normalizeMovieData.js","ui/Layout/pages/Media/MediaLayout/MediaLayout.styled.js","ui/Layout/pages/Media/MediaLayout/MediaLayout.jsx"],"sourcesContent":["export const PROFILE_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const PROFILE_H632 = 'https://image.tmdb.org/t/p/h632';\nexport const POSTER_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const POSTER_W342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_W500 = 'https://image.tmdb.org/t/p/w500';\nexport const BACKDROP_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","export const formatDate = date => {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMovieData = (data, mediaTypes) => {\n    const {\n        id,\n        belongs_to_collection,\n        name,\n        original_name,\n        title,\n        original_title,\n        overview,\n        genres,\n        release_date,\n        first_air_date,\n        vote_average,\n        created_by,\n        poster_path,\n        backdrop_path,\n    } = data;\n    let newReleaseDate;\n    let newAirDate;\n    if (release_date) {\n        newReleaseDate = formatDate(release_date);\n    } else newReleaseDate = false;\n    if (first_air_date) {\n        newAirDate = formatDate(first_air_date);\n    } else newAirDate = false;\n    const rating = vote_average > 0 ? Math.round(vote_average * 10) : 'NR';\n    const personName = name\n        ? name\n        : original_name\n        ? original_name\n        : title\n        ? title\n        : original_title;\n    const creators = [];\n    created_by?.map(el =>\n        creators.push({ credit_id: el.credit_id, name: el.name })\n    );\n    return {\n        id,\n        belongs_to_collection: belongs_to_collection\n            ? belongs_to_collection.id\n            : null,\n        vote_average: rating,\n        name: personName,\n        release: {\n            release_date: newReleaseDate,\n            title: 'Release date: ',\n        },\n        first_air: {\n            first_air_date: newAirDate,\n            title: 'First air date: ',\n        },\n        overview:\n            overview !== ''\n                ? overview\n                : 'Sorry, but there is no overview for this movie.',\n        genres:\n            genres.length > 0\n                ? genres\n                : [{ id: '', name: 'No information available' }],\n        poster_path,\n        backdrop_path,\n        created_by: creators.length > 0 ? creators : null,\n    };\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSection = styled.section`\n    color: ${({ theme }) => theme.colors.themeText};\n    background-color: ${({ theme }) => theme.colors.mediumBackground};\n`;\n\nexport const MovieWrapper = styled.div`\n    text-align: center;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: flex;\n        gap: 20px;\n        text-align: left;\n    }\n`;\n\nexport const MoviePoster = styled.img`\n    width: 100px;\n    object-fit: cover;\n    aspect-ratio: 2 / 3;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 16px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        margin-bottom: 0;\n        margin-left: 0;\n        margin-right: 0;\n    }\n`;\n\nexport const MovieInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.m} {\n        gap: 20px;\n    }\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport {\n    MovieInfoTitle,\n    MovieInfoWrapper,\n    MoviePoster,\n    MovieWrapper,\n    StyledSection,\n} from './MediaLayout.styled';\nimport noPoster from '../../../../images/no-poster.jpg';\nimport { normalizeMovieData } from 'common/services/normalize/normalizeMovieData';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { getDetails } from 'common/services/api';\nimport { Page404 } from '../../globalLayouts/Search/Page404/Page404';\nimport { POSTER_W185 } from 'common/constants';\n\nexport const MediaLayout = () => {\n    const { mediaId } = useParams();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const type = mediaId.split('-')[0];\n        const id = mediaId.split('-')[1];\n        getDetails(type, id, '')\n            .then(data => setMovie(normalizeMovieData(data)))\n            .catch(err => setError(err.message))\n            .finally(() => setIsLoading(false));\n    }, [mediaId]);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {movie && (\n                <StyledSection className=\"padding-top\">\n                    <Container>\n                        <MovieWrapper>\n                            <MoviePoster\n                                src={\n                                    movie.poster_path\n                                        ? POSTER_W185 + movie.poster_path\n                                        : noPoster\n                                }\n                                alt={movie.name}\n                            />\n                            <MovieInfoWrapper>\n                                <MovieInfoTitle>{movie.name}</MovieInfoTitle>\n                                {movie.release.release_date && (\n                                    <p>\n                                        {movie.release.title}\n                                        {movie.release.release_date}\n                                    </p>\n                                )}\n                                {movie.first_air.first_air_date && (\n                                    <p>\n                                        {movie.first_air.title}\n                                        {movie.first_air.first_air_date}\n                                    </p>\n                                )}\n                            </MovieInfoWrapper>\n                        </MovieWrapper>\n                    </Container>\n                </StyledSection>\n            )}\n            <Suspense>\n                <Outlet />\n            </Suspense>\n            {error && <Page404 />}\n        </>\n    );\n};\n"],"names":["PROFILE_W185","PROFILE_H632","POSTER_W185","POSTER_W342","BACKDROP_W1280","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","normalizeMovieData","data","mediaTypes","newReleaseDate","newAirDate","id","belongs_to_collection","name","original_name","title","original_title","overview","genres","release_date","first_air_date","vote_average","created_by","poster_path","backdrop_path","rating","round","personName","creators","map","el","push","credit_id","release","first_air","length","StyledSection","styled","theme","colors","themeText","mediumBackground","MovieWrapper","breakpoints","xs","MoviePoster","MovieInfoWrapper","baseTransition","m","MovieInfoTitle","fontSizes","xxl","MediaLayout","mediaId","useParams","useState","isLoading","setIsLoading","error","setError","movie","setMovie","useEffect","type","split","getDetails","then","catch","err","message","finally","Loader","className","Container","src","noPoster","alt","Suspense","Page404"],"sourceRoot":""}