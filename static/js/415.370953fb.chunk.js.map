{"version":3,"file":"static/js/415.370953fb.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","services/normalize.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-color: #00000080;\n    transition: opacity 250ms, visibility 250ms;\n    z-index: 100;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Backdrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </Backdrop>\n    );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ImgWrapper = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    width: 100%;\n    height: 100%;\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: block;\n    flex-grow: 1;\n`;\n\nexport const CardOverlay = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n    padding: 20px;\n    background-color: #000000e8;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n    )\n        ? 'transform: translateY(0); opacity: 1;'\n        : 'transform: translateY(100%); opacity: 0;'}\n`;\n\nexport const MovieTitle = styled.h2`\n    display: flex;\n    justify-content: center;\n    max-height: 81px;\n    text-align: center;\n    overflow: hidden;\n    line-height: 1.5;\n    color: ${({ theme }) => theme.colors.white};\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n`;\n\nexport const Description = styled.p`\n    padding: 4px 10px;\n    background-color: ${({ theme }) => theme.colors.white};\n    border-radius: 12px;\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: 700;\n`;\n","import { Grid, GridItem } from 'components/App.styled';\nimport { useLocation } from 'react-router-dom';\nimport {\n    CardOverlay,\n    Description,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n} from './MovieList.styled';\nimport { normalizeMoviesData } from 'services/normalize';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    const data = normalizeMoviesData(movies);\n    return (\n        <Grid>\n            {data.map(({ id, movie_title, poster }) => (\n                <GridItem key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                        <ImgWrapper>\n                            <img src={poster} alt={movie_title} />\n                            <CardOverlay className=\"js-overlay\">\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <Description>Ð¡lick for details</Description>\n                            </CardOverlay>\n                        </ImgWrapper>\n                    </MovieLink>\n                </GridItem>\n            ))}\n        </Grid>\n    );\n};\n","import noPoster from '../images/no-poster.jpg';\n\nexport const normalizeMoviesData = data => {\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n    return data.map(\n        ({ id, title, original_title, name, original_name, poster_path }) => {\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            const poster = poster_path\n                ? IMAGES_BASE_URL + poster_path\n                : noPoster;\n            return {\n                id,\n                movie_title,\n                poster,\n            };\n        }\n    );\n};\n","import {\n    Container,\n    HomeTitle,\n    TrendsBtn,\n    TrendsBtnWrapper,\n    TrendsTogler,\n} from 'components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { gethMovies } from 'services/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [trands, setTrends] = useState('day');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        gethMovies('day')\n            .then(data => {\n                setMovies(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        setIsLoading(true);\n        gethMovies(trands)\n            .then(data => {\n                setMovies(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [trands]);\n\n    const onBtnWeekClick = () => {\n        setTrends('week');\n    };\n\n    const onBtnDayClick = () => {\n        setTrends('day');\n    };\n\n    return (\n        <Container>\n            {isLoading && <Loader />}\n            <TrendsTogler>\n                <HomeTitle>Trending</HomeTitle>\n                <TrendsBtnWrapper>\n                    <TrendsBtn\n                        datatype=\"day\"\n                        className={trands === 'day' ? 'active' : ''}\n                        type=\"button\"\n                        onClick={onBtnDayClick}\n                    >\n                        today\n                    </TrendsBtn>\n                    <TrendsBtn\n                        className={trands === 'week' ? 'active' : ''}\n                        type=\"button\"\n                        onClick={onBtnWeekClick}\n                    >\n                        this week\n                    </TrendsBtn>\n                </TrendsBtnWrapper>\n            </TrendsTogler>\n            <MovieList movies={movies} />\n            {error && <ToastContainer />}\n        </Container>\n    );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n\nexport const gethMovies = async trands => {\n    const { data } = await axios.get(\n        `trending/movie/${trands}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const gethMoviesByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const gethMovieDetails = async (movieId, details) => {\n    const { data } = await axios.get(\n        `movie/${movieId}${details}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const gethMovieTrailer = async movieId => {\n    const { data } = await axios.get(\n        `movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    return data;\n};\n"],"names":["Backdrop","styled","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ImgWrapper","MovieLink","Link","CardOverlay","test","navigator","userAgent","MovieTitle","theme","colors","white","fontSizes","medium","Description","accent","small","MovieList","movies","location","useLocation","data","map","id","title","original_title","name","original_name","poster_path","movie_title","poster","noPoster","normalizeMoviesData","to","state","from","src","alt","className","useState","isLoading","setIsLoading","trands","setTrends","setMovies","error","setError","useEffect","gethMovies","then","results","catch","err","message","toast","finally","datatype","type","onClick","axios","API_KEY","gethMoviesByName","q","page","gethMovieDetails","movieId","details","gethMovieTrailer"],"sourceRoot":""}