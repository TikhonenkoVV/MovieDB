{"version":3,"file":"static/js/597.8c14a2db.chunk.js","mappings":"wOAAO,IAAMA,EAAe,kCACfC,EAAe,kCACfC,EAAc,kCACdC,EAAc,kCAEdC,EAAiB,kC,8ECLvB,IAAMC,EAAa,SAAAC,GAOtB,OADgB,IAAIC,KAAKD,GACVE,mBAAmB,QANlB,CACZC,KAAM,UACNC,MAAO,QACPC,IAAK,WAIZ,EAEYC,EAAU,SAACC,EAAWC,GAC/B,OAAOC,KAAKC,MACRD,KAAKE,IAAIV,KAAKW,MAAMJ,GAAWP,KAAKW,MAAML,IAA1C,SAGP,C,oGCZYM,EAAkBC,EAAAA,EAAAA,GAAH,qaAGZ,qBAAGC,MAAkBC,QAAQC,QAA7B,IACH,qBAAGF,MAAkBG,YAAYC,CAAjC,IACO,qBAAGJ,MAAkBC,QAAQI,QAA7B,IAEP,qBAAGL,MAAkBG,YAAYG,CAAjC,IAGA,qBAAGN,MAAkBG,YAAYI,EAAjC,IACO,qBAAGP,MAAkBC,QAAQO,QAA7B,IAEP,qBAAGR,MAAkBG,YAAYM,GAAjC,IAKAC,EAAkBX,EAAAA,EAAAA,GAAH,ieAGJ,qBAAGC,MAAkBW,OAAOC,MAA5B,IAEA,qBAAGZ,MAAkBW,OAAOC,MAA5B,IAUe,qBAAGZ,MAAkBW,OAAOE,MAA5B,IAQ1BC,GAAYf,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAH,qHAOTiB,EAAajB,EAAAA,EAAAA,IAAH,0QAIV,qBAAGC,MAAkBW,OAAOM,KAA5B,IASAC,EAAWnB,EAAAA,EAAAA,IAAH,yOAQG,qBAAGC,MAAkBW,OAAOC,MAA5B,IACX,qBAAGZ,MAAkBW,OAAOM,KAA5B,IAGAE,EAAapB,EAAAA,EAAAA,GAAH,6FAEN,qBAAGC,MAAkBoB,UAAUC,KAA/B,I,gDCjEJC,EAAY,SAAC,GAA2B,IAC3CC,ECZyB,SAACA,EAAMC,GACtC,OAAOD,EAAKE,KACR,YAWO,IACCC,EAXJC,EAUE,EAVFA,GACAC,EASE,EATFA,aACAC,EAQE,EARFA,KACAC,EAOE,EAPFA,MACAC,EAME,EANFA,WACAC,EAKE,EALFA,eACAC,EAIE,EAJFA,cACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,aACAC,EACE,EADFA,eAeA,OAXIV,EADAS,GACUnD,EAAAA,EAAAA,GAAWmD,GACdC,GACGpD,EAAAA,EAAAA,GAAWoD,GACR,MAQV,CACHT,GAAAA,EACAU,YATgBR,GAEdC,GAEAG,GAEAD,EAIFD,WAAYA,GAA0BP,EAEtCE,QAAAA,EACAE,aACIA,EAAe,EAAIlC,KAAK4C,MAAqB,GAAfV,GAAqB,KACvDM,YAAAA,EAEP,GAER,CD3BgBK,CADmC,EAAxBC,MAAwB,EAAjBhB,YAG/B,OACI,SAAC1B,EAAD,UACKyB,EAAKE,KACF,gBACIE,EADJ,EACIA,GACAC,EAFJ,EAEIA,aACAS,EAHJ,EAGIA,YACAN,EAJJ,EAIIA,WACAG,EALJ,EAKIA,YACAR,EANJ,EAMIA,QANJ,OAQI,SAAChB,EAAD,WACI,UAACI,EAAD,CACI2B,GACmB,UAAfV,EAAA,wBACuBJ,GACF,OAAfI,EAAA,uBACgBJ,GADhB,yCAEkCA,GANhD,WASI,UAACX,EAAD,YACI,SAAC0B,EAAA,EAAD,CACIC,KAAM,GACNC,OAAQhB,EACRiB,MAAO,CACHC,SAAU,WACVC,IAAK,GACLC,MAAO,GACPC,OAAQ,MAGhB,gBACIC,IACIhB,EAAW,UACFpD,EAAAA,GAAcoD,GACjBiB,EAEVC,IAAKf,QAGb,UAACnB,EAAD,YACI,SAACC,EAAD,UAAakB,KACb,uBAAIX,WAhCMC,EAR1B,KAgDf,C,qHEjEY0B,EAAQtD,EAAAA,EAAAA,KAAH,mgBAKL,mBAAqB,GAArB,EAAG4C,IAAH,IACC,mBAAqB,GAArB,EAAGA,IAAH,IAiBDW,EAAmBvD,EAAAA,EAAAA,IAAH,uJAQhBwD,EAAcxD,EAAAA,EAAAA,OAAH,4IAEV,qBAAGyD,KAAH,IACM,mBAAqB,EAArB,EAAGb,IAAH,IACI,mBAAc,OAAd,EAAGA,IAAH,IACC,qBAAGc,MAAH,IAGZC,EAAY3D,EAAAA,EAAAA,OAAH,qHAGF,mBAAqB,EAArB,EAAG4C,IAAH,IACI,mBAAc,OAAd,EAAGA,IAAH,IAGXgB,EAAY5D,EAAAA,EAAAA,KAAH,+CACL,qBAAG4C,IAAH,I,SCvCJD,EAAW,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOF,EAAW,EAAXA,KAChCiB,GAAaC,EAAAA,EAAAA,UACnB,GAA0CC,EAAAA,EAAAA,UAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAuCF,EAAAA,EAAAA,UAAS,GAAhD,eAAOG,EAAP,KAAoBC,EAApB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACN,IChBgBC,EDgBVC,EAAcT,EAAWU,QAAQC,iBACjCC,EAAgBC,MAAM7B,GAEtB,EADAyB,EAAeA,EAAc,IAAOzB,EAE1CoB,EAAiBQ,GACjBN,EAAiBO,MAAM7B,GAA6B,QCrBpCwB,EDqB0BxB,GCpBhC,GAAW,MACrBwB,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,GAAW,SACrCA,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,GAAW,UACrCA,EAAU,IAAMA,EAAU,IAC1BA,EAAU,GAD2B,QAElC,ODWN,GAAE,CAACxB,EAAQmB,KAGR,UAACV,EAAD,CAAOV,KAAMA,EAAME,OAAK,UAAOA,GAA/B,WACI,UAACS,EAAD,CACIoB,MAAO,GAAK/B,EACZgC,OAAQ,GAAKhC,EACbiC,QAAO,cAAgB,GAAPjC,EAAT,YAA6B,GAAPA,GAHjC,WAKI,SAACe,EAAD,CACIf,KAAMA,EACNkC,GAAI,GAAKlC,EACTmC,GAAI,GAAKnC,EACToC,EAAG,GAAKpC,KAEZ,SAACY,EAAD,CACIZ,KAAMA,EACNa,MAAOS,EACPR,OAAQM,EACRiB,IAAKpB,EACLiB,GAAI,GAAKlC,EACTmC,GAAI,GAAKnC,EACToC,EAAG,GAAKpC,QAGhB,SAACgB,EAAD,CAAWhB,KAAMA,EAAjB,SACM8B,MAAM7B,GAAyBA,EAAfA,EAAS,QAI1C,C,sHElDYqC,E,QAAelF,EAAAA,GAAH,8KACJ,qBAAGC,MAAkBC,QAAQC,QAA7B,IACR,qBAAGF,MAAkBW,OAAOuE,SAA5B,IACA,qBAAGlF,MAAkBG,YAAYC,CAAjC,IACY,qBAAGJ,MAAkBC,QAAQI,QAA7B,IAEZ,qBAAGL,MAAkBG,YAAYI,EAAjC,IACY,qBAAGP,MAAkBC,QAAQO,QAA7B,I,iDCDZ2E,EAAe,WACxB,OAAkCrB,EAAAA,EAAAA,WAAS,GAA3C,eAAOsB,EAAP,KAAkBC,EAAlB,KACA,GAA4BvB,EAAAA,EAAAA,UAAS,IAArC,eAAOwB,EAAP,KAAeC,EAAf,KACA,GAAoBzB,EAAAA,EAAAA,UAAS,IAA7B,eAAO0B,EAAP,KAAWC,EAAX,KACA,GAA0B3B,EAAAA,EAAAA,UAAS,MAAnC,eAAO4B,EAAP,KAAcC,EAAd,KAEMC,GADeC,EAAAA,EAAAA,MAAbC,SACcC,MAAM,KAAK,GAC3BC,EAAoB,WAATJ,EACXK,EAAgB,aAATL,EAkBb,OAhBAzB,EAAAA,EAAAA,YAAU,WACF6B,IACAX,GAAa,IACba,EAAAA,EAAAA,IAAW,QAAS,GACfC,MAAK,SAAA5E,GAAI,OAAIgE,EAAUhE,EAAK6E,QAAnB,IACTC,OAAM,SAAAC,GAAG,OAAIX,EAASW,EAAIC,QAAjB,IACTC,SAAQ,kBAAMnB,GAAa,EAAnB,KAEbY,IACAZ,GAAa,IACba,EAAAA,EAAAA,IAAW,KAAM,GACZC,MAAK,SAAA5E,GAAI,OAAIkE,EAAMlE,EAAK6E,QAAf,IACTC,OAAM,SAAAC,GAAG,OAAIX,EAASW,EAAIC,QAAjB,IACTC,SAAQ,kBAAMnB,GAAa,EAAnB,IAEpB,GAAE,CAACW,EAAUC,KAEV,qBAASQ,UAAU,cAAnB,UACKrB,IAAa,SAACsB,EAAA,EAAD,KACd,UAACC,EAAA,EAAD,YACI,UAAC1B,EAAD,6BACoBe,EAAW,SAAW,eAE1C,SAAC1E,EAAA,EAAD,CACIkB,MAAOwD,EAAWV,EAASE,EAC3BhE,WAAYwE,EAAW,QAAU,UAGxCN,IAAS,uBAAIA,MAGzB,C","sources":["common/constants.js","common/services/dateOperations.js","ui/Layout/globalComponents/components/MediaList/MediaList.styled.js","ui/Layout/globalComponents/components/MediaList/MediaList.jsx","common/services/normalize/normalizeMoviesData.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.styled.js","ui/Layout/globalComponents/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js","ui/Layout/pages/Media/PopularMedia/PopularMedia.styled.js","ui/Layout/pages/Media/PopularMedia/PopularMedia.jsx"],"sourcesContent":["export const PROFILE_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const PROFILE_H632 = 'https://image.tmdb.org/t/p/h632';\nexport const POSTER_W185 = 'https://image.tmdb.org/t/p/w185';\nexport const POSTER_W342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_W500 = 'https://image.tmdb.org/t/p/w500';\nexport const BACKDROP_W1280 = 'https://image.tmdb.org/t/p/w1280';\n","export const formatDate = date => {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n    };\n    const newDate = new Date(date);\n    return newDate.toLocaleDateString('en-US', options);\n};\n\nexport const calcAge = (startDate, endDate) => {\n    return Math.trunc(\n        Math.abs(Date.parse(endDate) - Date.parse(startDate)) /\n            (24 * 3600 * 365.25 * 1000)\n    );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMedialist = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: ${({ theme }) => theme.spacing.retreatS};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n`;\n\nexport const StyledMediaCard = styled.li`\n    display: flex;\n    flex-direction: column;\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n\n    &:hover,\n    &:focus {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img,\n    &:focus img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 100%;\n    overflow: hidden;\n    aspect-ratio: 2/3;\n    color: ${({ theme }) => theme.colors.white};\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const CardInfo = styled.div`\n    flex-grow: 1;\n    width: 100%;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    text-align: center;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 6px;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 1.5;\n`;\n","import {\n    CardInfo,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n    StyledMediaCard,\n    StyledMedialist,\n} from './MediaList.styled';\nimport noPoster from '../../../../images/no-poster.jpg';\nimport { POSTER_W342 } from 'common/constants';\nimport { ScoreBar } from 'ui/Layout/globalComponents/components/ScoreBar/ScoreBar';\nimport { normalizeMoviesData } from 'common/services/normalize/normalizeMoviesData';\n\nexport const MediaList = ({ media, mediaTypes }) => {\n    const data = normalizeMoviesData(media, mediaTypes);\n\n    return (\n        <StyledMedialist>\n            {data.map(\n                ({\n                    id,\n                    vote_average,\n                    movie_title,\n                    media_type,\n                    poster_path,\n                    release,\n                }) => (\n                    <StyledMediaCard key={id}>\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/movie-${id}`\n                                    : media_type === 'tv'\n                                    ? `/tv-shows/tv-${id}`\n                                    : `/movies/collections/collection-${id}`\n                            }\n                        >\n                            <ImgWrapper>\n                                <ScoreBar\n                                    size={0.7}\n                                    rating={vote_average}\n                                    style={{\n                                        position: 'absolute',\n                                        top: 10,\n                                        right: 10,\n                                        zIndex: 1,\n                                    }}\n                                />\n                                <img\n                                    src={\n                                        poster_path\n                                            ? `${POSTER_W342 + poster_path}`\n                                            : noPoster\n                                    }\n                                    alt={movie_title}\n                                />\n                            </ImgWrapper>\n                            <CardInfo>\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <p>{release}</p>\n                            </CardInfo>\n                        </MovieLink>\n                    </StyledMediaCard>\n                )\n            )}\n        </StyledMedialist>\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMoviesData = (data, mediaTypes) => {\n    return data.map(\n        ({\n            id,\n            vote_average,\n            name,\n            title,\n            media_type,\n            original_title,\n            original_name,\n            poster_path,\n            release_date,\n            first_air_date,\n        }) => {\n            let release;\n            if (release_date) {\n                release = formatDate(release_date);\n            } else if (first_air_date) {\n                release = formatDate(first_air_date);\n            } else release = 'N/a';\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            return {\n                id,\n                movie_title,\n                media_type: media_type ? media_type : mediaTypes,\n\n                release,\n                vote_average:\n                    vote_average > 0 ? Math.round(vote_average * 10) : 'NR',\n                poster_path,\n            };\n        }\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n","import styled from '@emotion/styled';\n\nexport const SectionTitle = styled.h1`\n    margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n    color: ${({ theme }) => theme.colors.themeText};\n    @media ${({ theme }) => theme.breakpoints.s} {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatL};\n    }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Container } from 'ui/Layout/globalComponents/layouts/Container/Container';\nimport { SectionTitle } from './PopularMedia.styled';\nimport { useEffect, useState } from 'react';\nimport { getPopular } from 'common/services/api';\nimport { Loader } from 'ui/Layout/globalComponents/components/Loader';\nimport { MediaList } from 'ui/Layout/globalComponents/components/MediaList/MediaList';\n\nexport const PopularMedia = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [tv, setTv] = useState([]);\n    const [error, setError] = useState(null);\n    const { pathname } = useLocation();\n    const path = pathname.split('/')[1];\n    const isMovies = path === 'movies';\n    const isTv = path === 'tv-shows';\n\n    useEffect(() => {\n        if (isMovies) {\n            setIsLoading(true);\n            getPopular('movie', 1)\n                .then(data => setMovies(data.results))\n                .catch(err => setError(err.message))\n                .finally(() => setIsLoading(false));\n        }\n        if (isTv) {\n            setIsLoading(true);\n            getPopular('tv', 1)\n                .then(data => setTv(data.results))\n                .catch(err => setError(err.message))\n                .finally(() => setIsLoading(false));\n        }\n    }, [isMovies, isTv]);\n    return (\n        <section className=\"padding-top\">\n            {isLoading && <Loader />}\n            <Container>\n                <SectionTitle>\n                    Top 20 Popular {isMovies ? 'Movies' : 'TV Shows'}\n                </SectionTitle>\n                <MediaList\n                    media={isMovies ? movies : tv}\n                    mediaTypes={isMovies ? 'movie' : 'tv'}\n                />\n            </Container>\n            {error && <p>{error}</p>}\n        </section>\n    );\n};\n"],"names":["PROFILE_W185","PROFILE_H632","POSTER_W185","POSTER_W342","BACKDROP_W1280","formatDate","date","Date","toLocaleDateString","year","month","day","calcAge","startDate","endDate","Math","trunc","abs","parse","StyledMedialist","styled","theme","spacing","retreatS","breakpoints","s","retreatM","m","xl","retreatL","xxl","StyledMediaCard","colors","accent","shadow","MovieLink","Link","ImgWrapper","white","CardInfo","MovieTitle","fontSizes","small","MediaList","data","mediaTypes","map","release","id","vote_average","name","title","media_type","original_title","original_name","poster_path","release_date","first_air_date","movie_title","round","normalizeMoviesData","media","to","ScoreBar","size","rating","style","position","top","right","zIndex","src","noPoster","alt","Score","ScoreProgressBar","ScoreCircle","color","length","BgrCircle","ScoreSpan","AnimCircle","useRef","useState","currentLength","setCurrentLength","currenColor","setCurrentColor","useEffect","percent","totalLength","current","getTotalLength","circleLength","isNaN","width","height","viewBox","cx","cy","r","ref","SectionTitle","themeText","PopularMedia","isLoading","setIsLoading","movies","setMovies","tv","setTv","error","setError","path","useLocation","pathname","split","isMovies","isTv","getPopular","then","results","catch","err","message","finally","className","Loader","Container"],"sourceRoot":""}