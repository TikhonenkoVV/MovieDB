{"version":3,"file":"static/js/354.864359e4.chunk.js","mappings":"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","sources":["ui/pages/Home/Hero/Hero.styled.js","ui/pages/Home/Hero/Hero.jsx","ui/shared/components/Select/Select.styled.js","ui/shared/components/Select/Select.jsx","ui/pages/Home/TrendsTogler/TrendsTogler.styled.js","ui/pages/Home/TrendsTogler/TrendsTogler.jsx","ui/pages/Home/Home.jsx","common/services/getBackgraunds.js","ui/shared/components/MediaList/MediaList.styled.js","ui/shared/components/MediaList/MediaList.jsx","common/services/normalize/normalizeMoviesData.js","ui/shared/components/ScoreBar/ScoreBar.styled.js","ui/shared/components/ScoreBar/ScoreBar.jsx","common/services/set-color.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { BACKDROP_W1280 } from 'common/constants';\n\nexport const HeroSection = styled.section`\n    padding-bottom: 0;\n`;\n\nexport const HeroBackground = styled.div`\n    @media screen and (max-width: 349px) {\n        aspect-ratio: 4/3;\n    }\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    width: 100%;\n    padding: 30px;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.hover};\n\n    aspect-ratio: 7 / 4;\n    @media ${({ theme }) => theme.breakpoints.m} {\n        aspect-ratio: 8 / 3;\n        padding: 50px;\n    }\n    @media ${({ theme }) => theme.breakpoints.l} {\n        aspect-ratio: 7 / 2;\n    }\n    &:before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        border-bottom-left-radius: 20px;\n        border-bottom-right-radius: 20px;\n        opacity: 0.7;\n        background-image: ${({ background }) =>\n            \"url('\" + BACKDROP_W1280 + background + \"')\"};\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        filter: grayscale(1);\n        mix-blend-mode: soft-light;\n        @media ${({ theme }) => theme.breakpoints.xs} {\n            background-position: auto 12%;\n        }\n    }\n`;\n\nexport const Title = styled.h1`\n    font-weight: 700;\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.xxxl};\n    }\n`;\n\nexport const Description = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    font-weight: 700;\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.large};\n    }\n`;\n","import { Container } from 'ui/shared/layouts/Container/Container';\nimport { Description, HeroBackground, HeroSection, Title } from './Hero.styled';\n\nexport const Hero = ({ backgrounds }) => {\n    const image =\n        backgrounds && backgrounds[Math.floor(Math.random() * (20 - 1) + 1)];\n    return (\n        <HeroSection>\n            <Container>\n                <HeroBackground background={image}>\n                    <Title>Welcome.</Title>\n                    <Description>\n                        Looking for a movie, TV show or person? We'll help.\n                    </Description>\n                </HeroBackground>\n            </Container>\n        </HeroSection>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.themeText};\n    transition: color ${({ theme }) => theme.baseTransition};\n    cursor: pointer;\n    z-index: 3;\n`;\n\nexport const BtnSelectStyled = styled.button`\n    padding-left: 5px;\n    padding-right: 20px;\n    border: none;\n    background-color: transparent;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    font-weight: 500;\n    line-height: 1.5;\n    cursor: pointer;\n\n    &:before {\n        content: '';\n        position: absolute;\n        right: 0;\n        top: 50%;\n        border: 1px solid ${({ theme }) => theme.colors.themeText};\n        border-width: 0 2px 2px 0;\n        padding: 3px;\n        transform: translateY(${({ isOpen }) => (!isOpen ? '-80%' : '-30%')})\n            rotate(${({ isOpen }) => (!isOpen ? '45deg' : '-135deg')});\n        transition: transform 250ms;\n        cursor: pointer;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n`;\n\nexport const DivListStyled = styled.div`\n    position: absolute;\n    top: 100%;\n    right: 0;\n    border-radius: 8px;\n    padding: 10px;\n    margin: 0;\n    margin-top: 10px;\n    background-color: ${({ theme }) => theme.colors.mainBackground};\n    transform: ${props => (props.isOpen ? 'scaleY(1)' : 'scaleY(0)')};\n    transform-origin: top;\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    box-shadow: ${props => props.theme.colors.boxShadowSelector};\n    border: 1px solid ${props => props.theme.colors.borderSelectorColor};\n`;\n\nexport const LiStyled = styled.li`\n    width: 80px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    border-radius: 4px;\n    color: ${props => props.theme.colors.textSelectorColor};\n    text-align: center;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.hover};\n        color: ${({ theme }) => theme.colors.white};\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n    DivStyled,\n    BtnSelectStyled,\n    DivListStyled,\n    LiStyled,\n} from './Select.styled';\n\nexport const Select = ({ initial, onChange }) => {\n    const [currVal, setCurrVal] = useState('All');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const [options, setOptions] = useState([\n        { all: 'All' },\n        { movie: 'Movie' },\n        { tv: 'Tv' },\n    ]);\n\n    const handleChange = event => {\n        event.stopPropagation();\n        setCurrVal(event.target.innerText);\n        onChange(event.target.getAttribute('data-id'));\n        setIsOpen(false);\n    };\n\n    const handleClick = event => {\n        event.stopPropagation();\n        setIsOpen(!isOpen);\n    };\n\n    useEffect(() => {\n        window.addEventListener('click', () => setIsOpen(false));\n        return () => {\n            window.removeEventListener('click', () => setIsOpen(false));\n        };\n    }, []);\n\n    useEffect(() => {\n        if (initial?.options) setOptions(initial.options);\n    }, [initial]);\n\n    return (\n        <DivStyled>\n            <BtnSelectStyled isOpen={isOpen} onClick={handleClick}>\n                {currVal ? currVal : 'Theme'}\n            </BtnSelectStyled>\n\n            <DivListStyled isOpen={isOpen} onClick={e => e.stopPropagation()}>\n                <ul>\n                    {options?.map(el => (\n                        <LiStyled\n                            data-id={Object.keys(el)}\n                            key={Object.keys(el)}\n                            onClick={handleChange}\n                        >\n                            {Object.values(el)}\n                        </LiStyled>\n                    ))}\n                </ul>\n            </DivListStyled>\n        </DivStyled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledTogler = styled.div`\n    display: grid;\n    grid-template-columns: auto auto;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-template-columns: auto auto auto;\n    }\n`;\n\nexport const TogglerTitle = styled.h1`\n    grid-column: span 2;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.themeText};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-column: auto;\n        font-size: ${({ theme }) => theme.fontSizes.large};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        font-size: ${({ theme }) => theme.fontSizes.xl};\n    }\n`;\n\nexport const TrendsBtnWrapper = styled.div`\n    position: relative;\n    display: flex;\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 17px;\n    overflow: hidden;\n`;\n\nexport const TrendsBtn = styled.button`\n    flex-basis: 50%;\n    width: 100px;\n    height: 100%;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: ${({ theme }) => theme.colors.light};\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    transition: background-color ${({ theme }) => theme.baseTransition},\n        color ${({ theme }) => theme.baseTransition};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n    &:hover,\n    &:focus {\n        color: ${({ theme }) => theme.colors.themeText};\n    }\n    &.active {\n        color: ${({ theme }) => theme.colors.white};\n        background-color: ${({ theme }) => theme.colors.accent};\n    }\n`;\n","import { Select } from 'ui/shared/components/Select/Select';\nimport {\n    StyledTogler,\n    TogglerTitle,\n    TrendsBtn,\n    TrendsBtnWrapper,\n} from './TrendsTogler.styled';\n\nexport const TrendsToggler = ({\n    trands,\n    onBtnDayClick,\n    onBtnWeekClick,\n    hendleSelectChange,\n}) => {\n    return (\n        <StyledTogler>\n            <TogglerTitle>Top 20 Trending</TogglerTitle>\n            <TrendsBtnWrapper>\n                <TrendsBtn\n                    datatype=\"day\"\n                    className={trands === 'day' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnDayClick}\n                >\n                    today\n                </TrendsBtn>\n                <TrendsBtn\n                    className={trands === 'week' ? 'active' : ''}\n                    type=\"button\"\n                    onClick={onBtnWeekClick}\n                >\n                    this week\n                </TrendsBtn>\n            </TrendsBtnWrapper>\n            <Select onChange={hendleSelectChange} />\n        </StyledTogler>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovies } from 'common/services/api';\nimport { getBackgrounds } from 'common/services/getBackgraunds';\nimport { Hero } from './Hero/Hero';\nimport { TrendsToggler } from './TrendsTogler/TrendsTogler';\nimport { Loader } from 'ui/shared/components/Loader';\nimport { Container } from 'ui/shared/layouts/Container/Container';\nimport { MediaList } from 'ui/shared/components/MediaList/MediaList';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [trands, setTrends] = useState('day');\n    const [mediaTypes, setMediaTypes] = useState('all');\n    const [movies, setMovies] = useState([]);\n    const [backgrounds, setBackgrounds] = useState();\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        getMovies(mediaTypes, trands)\n            .then(data => {\n                setMovies(data.results);\n                setBackgrounds(getBackgrounds(data.results));\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [mediaTypes, trands]);\n\n    const onBtnWeekClick = () => {\n        setTrends('week');\n    };\n\n    const onBtnDayClick = () => {\n        setTrends('day');\n    };\n\n    const hendleSelectChange = mediaType => {\n        setMediaTypes(mediaType);\n    };\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <Hero backgrounds={backgrounds} />\n            <section className=\"padding-top\">\n                <Container>\n                    <TrendsToggler\n                        trands={trands}\n                        onBtnDayClick={onBtnDayClick}\n                        onBtnWeekClick={onBtnWeekClick}\n                        hendleSelectChange={hendleSelectChange}\n                    />\n                </Container>\n            </section>\n            <section>\n                <Container>\n                    <MediaList media={movies} />\n                </Container>\n            </section>\n            {error && <ToastContainer />}\n        </>\n    );\n};\n\nexport default Home;\n","export const getBackgrounds = (data, mediaTypes) => {\n    const array = {};\n    const res = data.map(({ backdrop_path }, i) => {\n        return (array[i] = backdrop_path);\n    });\n    return res;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMedialist = styled.ul`\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatS};\n        grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n        display: grid;\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.s} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatM};\n    }\n    @media ${({ theme }) => theme.breakpoints.m} {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n    @media ${({ theme }) => theme.breakpoints.xl} {\n        grid-gap: ${({ theme }) => theme.spacing.retreatL};\n    }\n    @media ${({ theme }) => theme.breakpoints.xxl} {\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n`;\n\nexport const StyledMediaCard = styled.li`\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    overflow: hidden;\n    cursor: zoom-in;\n    &:not(:last-child) {\n        margin-bottom: ${({ theme }) => theme.spacing.retreatS};\n        @media ${({ theme }) => theme.breakpoints.xs} {\n            margin-bottom: 0;\n        }\n    }\n\n    &:hover {\n        box-shadow: 0px 2px 10px 2px ${({ theme }) => theme.colors.shadow};\n    }\n    &:hover img {\n        transform: scale(1.05);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: flex;\n    gap: 24px;\n    position: relative;\n    flex-grow: 1;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: block;\n    }\n`;\n\nexport const ImgWrapper = styled.div`\n    flex-shrink: 0;\n    width: 120px;\n    & img {\n        width: 100%;\n    }\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        width: 100%;\n        overflow: hidden;\n        aspect-ratio: 2/3;\n        color: ${({ theme }) => theme.colors.white};\n        & img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        }\n    }\n`;\n\nexport const ScoreBarBox = styled.div`\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 1;\n\n        white-space: normal;\n        width: auto;\n        height: auto;\n        overflow: auto;\n        clip: auto;\n        clip-path: none;\n        margin: 0;\n    }\n`;\n\nexport const CardInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    width: 100%;\n    /* text-align: left; */\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.white};\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        text-align: center;\n        padding-top: 10px;\n        padding-right: 10px;\n        padding-bottom: 10px;\n        padding-left: 10px;\n    }\n`;\n\nexport const MovieTitle = styled.h2`\n    margin-bottom: 6px;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 1.5;\n`;\n\nexport const Release = styled.p`\n    margin-bottom: 24px;\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Score = styled.p`\n    @media ${({ theme }) => theme.breakpoints.xs} {\n        display: none;\n    }\n`;\n","import {\n    CardInfo,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n    Release,\n    Score,\n    ScoreBarBox,\n    StyledMediaCard,\n    StyledMedialist,\n} from './MediaList.styled';\nimport noPoster from '../../../assets/images/no-poster.jpg';\nimport { POSTER_W342 } from 'common/constants';\nimport { normalizeMoviesData } from 'common/services/normalize/normalizeMoviesData';\nimport { ScoreBar } from '../ScoreBar/ScoreBar';\n\nexport const MediaList = ({ media, mediaTypes }) => {\n    const data = normalizeMoviesData(media, mediaTypes);\n\n    return (\n        <StyledMedialist>\n            {data.map(\n                ({\n                    id,\n                    vote_average,\n                    movie_title,\n                    media_type,\n                    poster_path,\n                    release,\n                }) => (\n                    <StyledMediaCard key={id}>\n                        <MovieLink\n                            to={\n                                media_type === 'movie'\n                                    ? `/movies/movie-${id}`\n                                    : media_type === 'tv'\n                                    ? `/tv-shows/tv-${id}`\n                                    : `/movies/collections/collection-${id}`\n                            }\n                        >\n                            <ScoreBarBox>\n                                <ScoreBar size={0.7} rating={vote_average} />\n                            </ScoreBarBox>\n                            <ImgWrapper>\n                                <img\n                                    width={80}\n                                    src={\n                                        poster_path\n                                            ? `${POSTER_W342 + poster_path}`\n                                            : noPoster\n                                    }\n                                    alt={movie_title}\n                                />\n                            </ImgWrapper>\n                            <CardInfo>\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <Release>{release}</Release>\n                                <Score>\n                                    User score:{' '}\n                                    {vote_average === 'NR'\n                                        ? vote_average\n                                        : `${vote_average} %`}\n                                </Score>\n                            </CardInfo>\n                        </MovieLink>\n                    </StyledMediaCard>\n                )\n            )}\n        </StyledMedialist>\n    );\n};\n","import { formatDate } from '../dateOperations';\n\nexport const normalizeMoviesData = (data, mediaTypes) => {\n    return data.map(\n        ({\n            id,\n            vote_average,\n            name,\n            title,\n            media_type,\n            original_title,\n            original_name,\n            poster_path,\n            release_date,\n            first_air_date,\n        }) => {\n            let release;\n            if (release_date) {\n                release = formatDate(release_date);\n            } else if (first_air_date) {\n                release = formatDate(first_air_date);\n            } else release = 'N/a';\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            return {\n                id,\n                movie_title,\n                media_type: media_type ? media_type : mediaTypes,\n\n                release,\n                vote_average:\n                    vote_average > 0 ? Math.round(vote_average * 10) : 'NR',\n                poster_path,\n            };\n        }\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Score = styled.span`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${({ size }) => size * 60}px;\n    height: ${({ size }) => size * 60}px;\n    color: #fff;\n    border: 1px dashed white;\n    border-radius: 50%;\n    & > span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n        background-color: #19171d;\n    }\n    pointer-events: none;\n`;\n\nexport const ScoreProgressBar = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(270deg);\n    z-index: 1;\n`;\n\nexport const ScoreCircle = styled.circle`\n    fill: none;\n    stroke: ${({ color }) => color};\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n    stroke-dashoffset: ${({ length }) => length};\n`;\n\nexport const BgrCircle = styled.circle`\n    fill: none;\n    stroke: #ffffff20;\n    stroke-width: ${({ size }) => size * 4};\n    stroke-dasharray: ${({ size }) => 46 * 3.14 * size};\n`;\n\nexport const ScoreSpan = styled.span`\n    font-size: ${({ size }) => size}em;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n    BgrCircle,\n    Score,\n    ScoreCircle,\n    ScoreProgressBar,\n    ScoreSpan,\n} from './ScoreBar.styled';\nimport { setColor } from 'common/services/set-color';\n\nexport const ScoreBar = ({ rating, style, size }) => {\n    const AnimCircle = useRef();\n    const [currentLength, setCurrentLength] = useState(0);\n    const [currenColor, setCurrentColor] = useState(0);\n\n    useEffect(() => {\n        const totalLength = AnimCircle.current.getTotalLength();\n        const circleLength = !isNaN(rating)\n            ? totalLength - (totalLength / 100) * rating\n            : 0;\n        setCurrentLength(circleLength);\n        setCurrentColor(!isNaN(rating) ? setColor(rating) : '#333');\n    }, [rating, currentLength]);\n\n    return (\n        <Score size={size} style={{ ...style }}>\n            <ScoreProgressBar\n                width={50 * size}\n                height={50 * size}\n                viewBox={`0 0 ${size * 50} ${size * 50}`}\n            >\n                <BgrCircle\n                    size={size}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></BgrCircle>\n                <ScoreCircle\n                    size={size}\n                    color={currenColor}\n                    length={currentLength}\n                    ref={AnimCircle}\n                    cx={25 * size}\n                    cy={25 * size}\n                    r={23 * size}\n                ></ScoreCircle>\n            </ScoreProgressBar>\n            <ScoreSpan size={size}>\n                {!isNaN(rating) ? rating + '%' : rating}\n            </ScoreSpan>\n        </Score>\n    );\n};\n","export const setColor = percent => {\n    if (percent < 11) return 'red';\n    if (percent > 10 && percent < 21) return '#ff3000';\n    if (percent > 20 && percent < 31) return '#ff6000';\n    if (percent > 30 && percent < 41) return '#ff9000';\n    if (percent > 40 && percent < 51) return 'yellow';\n    if (percent > 50 && percent < 61) return '#90ff00';\n    if (percent > 60 && percent < 71) return '#60ff00';\n    if (percent > 70 && percent < 81) return '#30ff00';\n    if (percent > 80 && percent < 91) return 'green';\n    if (percent > 90) return 'green';\n    return 'gray';\n};\n"],"names":["HeroSection","styled","HeroBackground","theme","colors","white","hover","breakpoints","m","l","background","BACKDROP_W1280","xs","Title","fontSizes","xl","xxxl","Description","medium","large","Hero","backgrounds","image","Math","floor","random","Container","DivStyled","themeText","baseTransition","BtnSelectStyled","small","isOpen","DivListStyled","mainBackground","props","boxShadowSelector","borderSelectorColor","LiStyled","textSelectorColor","Select","initial","onChange","useState","currVal","setCurrVal","setIsOpen","all","movie","tv","options","setOptions","handleChange","event","stopPropagation","target","innerText","getAttribute","useEffect","window","addEventListener","removeEventListener","onClick","e","map","el","Object","keys","values","StyledTogler","TogglerTitle","s","TrendsBtnWrapper","accent","TrendsBtn","light","TrendsToggler","trands","onBtnDayClick","onBtnWeekClick","hendleSelectChange","datatype","className","type","isLoading","setIsLoading","setTrends","mediaTypes","setMediaTypes","movies","setMovies","setBackgrounds","error","setError","getMovies","then","data","results","array","i","backdrop_path","getBackgrounds","catch","err","message","toast","finally","Loader","mediaType","MediaList","media","StyledMedialist","spacing","retreatS","retreatM","retreatL","xxl","StyledMediaCard","shadow","MovieLink","Link","ImgWrapper","ScoreBarBox","CardInfo","MovieTitle","Release","Score","release","id","vote_average","name","title","media_type","original_title","original_name","poster_path","release_date","first_air_date","formatDate","movie_title","round","normalizeMoviesData","to","ScoreBar","size","rating","width","src","POSTER_W342","noPoster","alt","ScoreProgressBar","ScoreCircle","color","length","BgrCircle","ScoreSpan","style","AnimCircle","useRef","currentLength","setCurrentLength","currenColor","setCurrentColor","percent","totalLength","current","getTotalLength","circleLength","isNaN","height","viewBox","cx","cy","r","ref"],"sourceRoot":""}